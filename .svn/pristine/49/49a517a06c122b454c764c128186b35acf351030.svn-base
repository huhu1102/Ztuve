<template>
    <!-- 成品库 -->
  <div>
    <div style="padding: 0px;display:flex;justify-content:space-between;align-items: center">
      <div style="display: inline">
        <el-input
          placeholder="通过产品名搜索,记得回车哦..."
          clearable
          @change="keywordsChange"
          style="width: 300px;margin: 0;padding: 0;"
          size="mini"
          :disabled="advanceSearchViewVisible"
          @keyup.enter.native="searchEmp"
          prefix-icon="el-icon-search"
          v-model="keywords">
        </el-input>
        <el-button type="primary" size="mini" style="margin-left: 5px" icon="el-icon-search" @click="searchEmp">搜索
        </el-button>
        <el-button size="mini" type="success" @click="initData" icon="el-icon-refresh"></el-button>
      </div>
      <div style="margin-left: 5px;margin-right: 20px;display: inline">
         <el-button  type="primary"  @click="addAndFlushData" size="mini" icon="el-icon-plus"  >添加</el-button> 
      </div>
    </div>
    <el-table  :data="productsList"  fit  highlight-current-row   border style="width: 100%">
      <el-table-column
        align="left"
        label="产品名称" >
        <template slot-scope="scope">
          <div v-if="scope.row.product">
          {{scope.row.product.producteName}}
          </div>
          <div v-else>
            暂无
          </div>
        </template>
      </el-table-column>
      <el-table-column
        prop="proNumber"
        align="left"
        label="产品数量">
      </el-table-column>
      <el-table-column

        align="left"
        label="备注" >
        <template slot-scope="scope">
          {{scope.row.note==null?"无":scope.row.note}}
        </template>
      </el-table-column>

      <el-table-column
        align="left"
        label="操作"
        >
        <template slot-scope="scope">

          <el-button @click="showEditView(scope.$index,scope.row)" style="padding: 3px 4px 3px 4px;margin: 2px"
                     size="mini">编辑
          </el-button>

          <el-button type="danger" style="padding: 3px 4px 3px 4px;margin: 2px" size="mini"
                     @click="deleteData(scope.row)">删除
          </el-button>
        </template>
      </el-table-column>
    </el-table>
    <div style="display: flex;justify-content: flex-end;margin: 2px">
      <!--          <el-button type="danger" size="mini" v-if="emps.length>0" :disabled="multipleSelection.length==0"-->
      <!--                     @click="deleteManyEmps">批量删除-->
      <!--          </el-button>-->
      <el-pagination
        background
        :page-size="10"
        :pager-count="11"
        :current-page="currentPage"
        @current-change="currentChange"
        layout="prev, pager, next"
        :total="totalCount">
      </el-pagination>
    </div>
    <el-dialog v-dialogDrag :title="dialogTitle"
               style="padding: 0px;"
               :close-on-click-modal="false"
               :visible.sync="dialogFormVisible"
               @close="cancelOpt"
               width="500px">
      <div style="width: 100% " v-if="dialogFormVisible">
        <el-form  :model="product" :rules="rules" ref="addEmpForm"  size="sam" label-width="90px"    >
          <el-form-item label="产品名称:" prop="productId">
            <el-select v-model="product.productId" style="width: 200px" size="mini" placeholder="请选择职位">
              <el-option
                v-for="item in productes"
                :key="item.id"
                :label="item.name"
                :value="item.id">
              </el-option>
            </el-select>
          </el-form-item>
          <el-form-item label="客户:" prop="clientId" >
            <el-popover
              v-model="showOrHidePop"
              placement="right"
              title="请选择公司"
              trigger="hover">
              <el-tree :data="shops" :default-expand-all="false" :props="defaultProps" :expand-on-click-node="false"
                       @node-click="handleNodeClick"></el-tree>
              <div slot="reference"
                   @click="showDepTree" v-bind:style="{color: depTextColor}">
                <el-input type="text" v-model="product.clientName"size="mini" clearable style="width: 200px" @clear="clearChoose" @blur='cancelChoos'></el-input>
              </div>
            </el-popover>
          </el-form-item>
          <!-- proName: '',
          productId: '',
          proNumber: '',//数量
          clientName:'',
          note:'',
          clientId:'' -->
          <el-form-item label="产品数量:" prop="proNumber">
            <el-input prefix-icon="el-icon-edit" v-model="product.proNumber" size="mini" style="width: 200px"
                      placeholder="产品数量..."></el-input>
          </el-form-item>
          <el-form-item label="备注:" prop="note">
            <el-input prefix-icon="el-icon-edit" v-model="product.note" size="mini" style="width: 200px"
                      placeholder="备注..."></el-input>
          </el-form-item>
        </el-form>
      </div>
      <div slot="footer" class="dialog-footer">
        <el-button @click="dialogFormVisible=false">取 消</el-button>
        <el-button type="primary" @click="addEmp('addEmpForm')">确 定</el-button>
      </div>
    </el-dialog>
  </div>

</template>
<script>
  export default{
    data() {

     
      
      return {
        productsList:[],
        dialogVisible: false,
        showOrHidePop: false,
        depTextColor: '#c0c4cc',
        keywords: '',
        tableLoading: false,
        advanceSearchViewVisible: false,
        rules: {
          productId: [{required: true, message: '必选:产品名称', trigger: 'change'}],
          proNumber: [{required: true, message: '必选:数量', trigger: 'blur'}]
        },
        products:[],
        defaultProps: {
          label: 'name',
          isLeaf: 'leaf',
          children: 'children'
        },
        dialogTitle: '',
        currentPage:1,
        formLabelWidth: '120px',
        totalCount: -1,
        product: {
          proName: '',
          productId: '',
          proNumber: '',//数量
          clientName:'',
          note:'',
          clientId:''
        },
        deps: [],
        posts:[],
        dialogTableVisible: false,
        dialogFormVisible: false,
        currentRowData:{},//当前选中行数据
        currentIndex:'',//当前选中行号
        pId:'',
        pName:''
      }
    },
    mounted: function () {
      this.initData();
      // this.formatGender(row);
    },
    methods: {
      formatSex: function (row, column) {
        return row.gender == "1" ? '男' : row.gender == '2' ? '女' : '未知';
      },
      showDepTree(){
          this.showOrHidePop = !this.showOrHidePop;
      },  
      handleNodeClick(data) {
        this.product.clientName = data.name;
        this.product.clientId = data.id;
         this.pId=data.id;
         this.pName=data.name;
        this.showOrHidePop = false;
        this.depTextColor = '#606266';
      },
      clearChoose(){
        this.product.clientName = '';
        this.product.clientId = '';
      },
      cancelChoos(){
        console.log(this.pName);
        this.product.clientName = this.pName;
        this.product.clientId =this.pId;
      },
      initData(){
        var _this = this;
        _this.loadData();
        this.getRequest("/finishedProduct/basedata").then(resp=> {
              if (resp && resp.status == 200) {
                var data = resp.data;
                // _this.nations = data.nations;
                // _this.politics = data.politics;
                _this.products = data.root.pruducts;
                // _this.posts = data.root.position;

              }
        })
      },
      keywordsChange(val){
        if (val == '') {
          this.loadData();
        }
      },
      currentChange(currentChange){
        this.currentPage = currentChange;
        console.log(this.currentPage);
        this.loadData();
      },
      addAndFlushData(){
        this.dialogTitle = "添加";
        this.emptyEmpData();
        this.dialogFormVisible = true;
      },

      searchEmp(){
        this.loadData();
      },
      showEditView(index,row){
        this.dialogTitle = "编辑";
        console.log(row);
        console.log(index);
        this.product=row;
        this.currentRowData=JSON.parse(JSON.stringify(row));
        this.currentIndex=index;
        this.product.name = row.name;
        this.product.positionId = row.positionId;
        this.dialogFormVisible = true;
      },
      addEmp(addEmpForm){
        this.dialogFormVisible=true;
        var _this = this;

        this.$refs[addEmpForm].validate((valid) => {
          if (valid) {
            // this.product.birthday=new Date(this.product.birthday);
            // this.product.entryDate=new Date(this.product.entryDate)
            if (this.product.id) {
              //更新
              this.tableLoading = true;
              console.log(this.product);
              // this.product.createDate=new Date(this.product.createDate)
              this.postRequest("/finishedProduct/add", this.product).then(resp=> {
                _this.tableLoading = false;
                if (resp && resp.status == 200) {
                  // var data = resp.data;
                  _this.dialogFormVisible = false;
                  _this.loadData();
                  _this.emptyEmpData();

                }
              })
            } else {
              //添加
              this.tableLoading = true;
              console.log(_this.product);
              this.postRequest("/finishedProduct/add", this.product).then(resp=> {
                _this.tableLoading = false;
                if (resp && resp.status == 200) {
                  var data = resp.data;
                  _this.dialogFormVisible = false;
                  _this.loadData();
                  _this.emptyEmpData();

                }
              })
            }
          } else {
            return false;
          }
        });
      },
      cancelOpt(){
        this.dialogFormVisible=false;
        this.loadData();
        // this.emps[this.currentIndex] =this.currentRowData;
      },
      deleteData(row){
        this.$confirm('此操作将删除该记录, 是否继续?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          this.doDelete(row.id);
        }).catch(() => {
        });
      },
      doDelete(ids){
        this.tableLoading = true;
        var _this = this;
        this.getRequest("/finishedProduct/delete?id=" + ids).then(resp=> {
          _this.tableLoading = false;
          if (resp && resp.status == 200) {
            var data = resp.data;
            _this.loadData();
          }
        })
      },
      loadData(){
        var _this = this;
        this.tableLoading = true;
        this.getRequest("/finishedProduct/findbypage?page=" + this.currentPage + "&size=10&queryName="+this.keywords).then(resp=> {
          this.tableLoading = false;
          if (resp && resp.status == 200) {
            var data = resp.data.data;
            _this.productsList= data;
            _this.totalCount=resp.data.total;
            _this.emptyEmpData();
          }
        })
      },
      handleCommand(cmd){
        var _this = this;
        if (cmd == 'logout') {
          this.$confirm('注销登录, 是否继续?', '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning'
          }).then(() => {
            // _this.getRequest("/logout");
            // _this.$store.commit('logout');
            _this.$router.replace({path: '/'});
          }).catch(() => {
            _this.$message({
              type: 'info',
              message: '取消'
            });
          });
        }
      },
      emptyEmpData(){
        console.log('+++++_+++++_')
        this.product = {
          proName: '',
          productId: '',
          proNumber: '',//数量
          clientName:'',
          note:'',
          clientId:''
        }
      }
    },

    computed: {
      routes(){
        return this.$store.state.routes
      }
    }
  }
</script>
<style>
  .el-submenu .el-menu-item {
    width: 180px;
    min-width: 175px;
  }
</style>
