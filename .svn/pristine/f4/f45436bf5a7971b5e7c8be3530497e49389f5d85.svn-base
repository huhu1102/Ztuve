<template>
  <div>
    <div style="padding: 0px;display:flex;justify-content:space-between;align-items: center">

        <div style="display: inline">
          <el-input
            placeholder="通过客户名称搜索,记得回车哦..."
            clearable
            @change="keywordsChange"
            style="width: 300px;margin: 0px;padding: 0px;"
            size="mini"
            :disabled="advanceSearchViewVisible"
            @keyup.enter.native="searchData"
            prefix-icon="el-icon-search"
            v-model="keywords">
          </el-input>
          <el-button type="primary" size="mini" style="margin-left: 5px" icon="el-icon-search" @click="searchData">搜索
          </el-button>
        </div>
        <div style="margin-left: 5px;margin-right: 20px;display: inline">
    
          <el-button  type="primary"  @click="addAndFlushData" size="mini" icon="el-icon-plus" >添加总公司</el-button>
        </div>
    </div>
    <div>
        <el-tabs v-model="activeName" type="border-card"  @tab-click="handleClick">
            <el-tab-pane label="下游客户" name="down"></el-tab-pane>
            <el-tab-pane label="上游企业" name="up"></el-tab-pane>
          </el-tabs>
        <div>
            <tree-table  ref="companyRef"
               :data="companys" :columns="columns" 
               :active-name="activeName"
               :shops='shops'
               @headCallBack="loadData"
             
               border>
            </tree-table>
          </div>
      </div>
  </div>
</template>
<script>

import treeTable from "./../TreeTable";

  export default{ 
    components: { treeTable},
    data() {

      const item = {
    };
      let   phonevalidate= (rule, value, callback) => {
        //后台方法
        const reg =   /^1[3|4|5|7|8][0-9]\d{8}$/;
        if(reg.test(value)){
          callback()
        }else{
          callback("电话号码格式错误!")
        }
      }
      return { 
        columns: [
        {
          text: "公司名称",
          value: "name",
          width: 200
        },
        {
          text: "编号",
          value: "id"
        },
        {
          text: "电话",
          value: "phone"
        },
        {
          text: "地址",
          value: "address"}
      ],
        dialogVisible: false,
        
        showOrHidePop: false,
        depTextColor: '#c0c4cc',
        keywords: '',
        tableLoading: false,
        advanceSearchViewVisible: false,
        rules: {
          name: [{required: true, message: '必填:姓名', trigger: 'blur'}],
          phone: [{required: true, message: '必填:电话号码', trigger: 'blur'},
            {
              validator:phonevalidate,

              message: '电话号码错误',
              trigger: 'blur'
            }],
          
          email: [{required: true, message: '必填:电子邮箱', trigger: 'blur'}, {
            type: 'email',
            message: '邮箱格式不正确',
            trigger: 'blur'
          }],
        },
        companys:[],
        defaultProps: {
          label: 'name',
          isLeaf: 'leaf',
          children: 'child'
        },
        dialogTitle: '',
        currentPage:1,
        tableData: Array(10).fill(item),
        formLabelWidth: '120px',
        totalCount: -1,
        company: {
          name: '',
          phone: '',
          address: '',
          email:'',
          fax:'',
          status:'',
          abbreviation:'',
          parentName:'',
          parentClientId:'',
          infor:''
        },
        shops: [],
        posts:[],
        dialogTableVisible: false,
        dialogFormVisible: false,
        pName:'',
        pId:'',
        activeName:'down',
        tempShops:[],
      }
    },
    mounted: function () {
      this.initData();
      // this.formatGender(row);
    },
  
    methods: {
      formatSex: function (row, column) {
        return row.status == "up" ? '上游' : row.status == 'down' ? '下游' : '未知';
      },
      showDepTree(){
          this.showOrHidePop = !this.showOrHidePop;
      },
      onTreeDataChange(){},
      handleNodeClick(data) {
        this.company.parentName = data.name;
        this.company.parentClientId = data.id;
         this.pId=data.id;
         this.pName=data.name;
        this.showOrHidePop = false;
        this.depTextColor = '#606266';
      },
      handleClick(tab, event) {//切换标签
        // console.log(tab, event);
        let activeName=this.activeName;
        this.loadData(activeName)
      },
      clearChoose(){
        this.company.parentName = '';
        this.company.parentClientId = '';
      },
      headCall(data){
        this.companys=data; 
      },
      cancelChoos(){
        console.log(this.pName);
        this.company.parentName = this.pName;
        this.company.parentClientId =this.pId;
      },
      initData(){
        var _this = this;
        let activeName=this.activeName;
        // _this.loadData(activeName);
        this.$refs['companyRef'].loadData(activeName);

      },
      keywordsChange(val){
        if (val == '') {
          let activeName=this.activeName;
          this.loadData(activeName);
        }
      },
      currentChange(currentChange){
        this.currentPage = currentChange;
        console.log(this.currentPage);
        let activeName=this.activeName;
        this.loadData(activeName);
      },
      addAndFlushData(){
        this.$refs['companyRef'].addAndFlushData();
        // this.dialogTitle = "添加客户";
        // this.dialogFormVisible = true;
        // var _this = this;
        // this.getRequest("/company/basic/maxWorkID").then(resp=> {
        //   if (resp && resp.status == 200) {
        //     _this.emp.workID = resp.data;
        //   }
        // })
      },
      searchData(){
        let activeName=this.activeName;
        this.loadData(activeName);
      },
      showEditEmpView(row){
        console.log(row)
        this.formTitle = "编辑客户信息";
        this.company = row;
        console.log(row);
        this.company.parentClientId = row.parentClientId;
        this.company.parentName = row.parentName;
        delete this.company.parent;
        delete this.company.purchasePlan;
        delete this.company.product;
        this.formVisible = true;
      },
      addData(addDataForm){
        this.dialogFormVisible=true;
        var _this = this;

        this.$refs[addDataForm].validate((valid) => {
          if (valid) {
            // this.company.birthday=new Date(this.company.birthday);
            // this.company.entryDate=new Date(this.company.entryDate)
            if (this.company.id) {
              //更新
              this.tableLoading = true;
              console.log(this.company);
              // this.company.createDate=new Date(this.company.createDate)
              this.postRequest("/client/add", this.company).then(resp=> {
                _this.tableLoading = false;
                if (resp && resp.status == 200) {
                  // var data = resp.data;
                  _this.dialogFormVisible = false;
                    let activeName=this.activeName;
                  _this.loadData(activeName);
                  _this.emptyData();

                }
              })
            } else {
              //添加
              this.tableLoading = true;
              console.log(_this.company);
              this.postRequest("/client/add", this.company).then(resp=> {
                _this.tableLoading = false;
                if (resp && resp.status == 200) {
                  var data = resp.data;

                  _this.dialogFormVisible = false;
                  let activeName=this.activeName;
                  _this.loadData(activeName);
                  _this.emptyData();

                }
              })
            }
          } else {
            return false;
          }
        });
      },
      cancelOpt(){
        this.dialogFormVisible=false;
        this.emptyData();
      },
   
      deleteData(){
        this.$confirm('此操作将删除该条记录, 是否继续?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          this.doDelete(row.id);
        }).catch(() => {
        });
      },
      doDelete(ids){
        this.tableLoading = true;
        var _this = this;
        this.getRequest("/client/delete?id=" + ids).then(resp=> {
          _this.tableLoading = false;
          if (resp && resp.status == 200) {
            var data = resp.data;
            _this.loadData(activeName);
          }
        })
      },
      loadData(){
        var _this = this;
        let activeName=this.activeName;
        this.tableLoading = true;
        console.log(activeName);
        this.getRequest("/client/findbypage?page=" + this.currentPage + "&size=10&queryName="+this.keywords+"&shopType="+activeName).then(resp=> {
          this.tableLoading = false;
          if (resp && resp.status == 200) {
            var data = resp.data.data;
            _this.companys = data;
            _this.totalCount=resp.data.total;
            _this.emptyData();
          }
        });
        this.getRequest("/client/baseData").then(resp=> {
          if (resp && resp.status == 200) {
            var data = resp.data.data;
            // _this.nations = data.nations;
            // _this.politics = data.politics;
            _this.shops = data;
            // _this.posts = data.root.position;

          }
        })
      },
     
      emptyData(){
        console.log('+++++_+++++_')
        this.company = {
          name: '',
          phone: '',
          address: '',
          email:'',
          birthday:'',
          entryDate:'',
          status:'',
          departmentName:'',
          departmentId:''
        }
      }
    },
    computed: {
      routes(){
        return this.$store.state.routes
      }
    }
  }
</script>
<style>
  .home-container {
    height: 100%;
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
  }

  .home-header {
    background-color: #20a0ff;
    color: #333;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: space-between;
    box-sizing: content-box;
    padding: 0px;
  }

  .home-aside {
    background-color: #ECECEC;
    width:60px;
  }

  .home-main {
    background-color: #fff;
    color: #000;
    text-align: center;
    margin: 0px;
    padding: 0px;;
  }

  .home_title {
    color: #fff;
    font-size: 22px;
    display: inline;
    margin-left: 8px;
  }

  .home_userinfo {
    color: #fff;
    cursor: pointer;
  }

  .home_userinfoContainer {
    display: inline;
    margin-right: 20px;
  }

  .el-submenu .el-menu-item {
    width: 180px;
    min-width: 175px;
  }
  .iconRight{

    margin-right: 10px;
  }
</style>
