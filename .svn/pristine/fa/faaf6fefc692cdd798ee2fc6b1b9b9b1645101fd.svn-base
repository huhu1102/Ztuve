// The Vue build version to load with the `import` command
// (runtime-only or standalone) has been set in webpack.base.conf with an alias.
import Vue from 'vue'
import App from './App'
import router from './router'
import ElementUI from 'element-ui'
import 'element-ui/lib/theme-chalk/index.css'
import store from './store'
import 'font-awesome/css/font-awesome.min.css'
import {
  getRequest
} from './utils/api'
import {
  postRequest
} from './utils/api'
import {
  deleteRequest
} from './utils/api'
import {
  putRequest
} from './utils/api'
import {
  jsonToString
} from './utils/api'
import {
  initMenu
} from './utils/utils'
import {
  isNotNullORBlank
} from './utils/utils'
import './utils/filter_utils'
import './utils/directives';
import dragTreeTable from 'drag-tree-table'
import _ from "lodash";

import 'vx-easyui/dist/themes/default/easyui.css';
import 'vx-easyui/dist/themes/icon.css';
import 'vx-easyui/dist/themes/vue.css';
import EasyUI from 'vx-easyui';
Vue.use(EasyUI);


Vue.prototype.getRequest = getRequest;
Vue.prototype.postRequest = postRequest;
Vue.prototype.deleteRequest = deleteRequest;
Vue.prototype.putRequest = putRequest;
Vue.prototype.jsonToString = jsonToString;
Vue.prototype.isNotNullORBlank = isNotNullORBlank;


Vue.config.productionTip = false;
Vue.use(ElementUI);
Vue.use(dragTreeTable);
/* eslint-disable no-new */
router.beforeEach((to, from, next) => {
  if (to.name == 'Login') {
    next();
    return;
  }
  var name = store.state.user.name;
  if (name == '未登录') {
    if (to.meta.requireAuth || to.name == null) {
      next({
        path: '/',
        query: {
          redirect: to.path
        }
      })
    } else {
      next();
    }
  } else {
    initMenu(router, store);
    if (to.path == '/chat')
      store.commit("updateMsgList", []);
    next();
  }
});
Vue.directive('enterNumber', {
  inserted: function (el) {
    el.addEventListener("keypress",function(e){
      e = e || window.event;
      let charcode = typeof e.charCode == 'number' ? e.charCode : e.keyCode;
      let re = /\d/;
      if(!re.test(String.fromCharCode(charcode)) && charcode > 9 && !e.ctrlKey){
        if(e.preventDefault){
          e.preventDefault();
        }else{
          e.returnValue = false;
        }
      }
    });
  }
});

new Vue({
  el: '#app',
  router,
  store,
  components: {
    App
  },
  template: '<App/>'
});
