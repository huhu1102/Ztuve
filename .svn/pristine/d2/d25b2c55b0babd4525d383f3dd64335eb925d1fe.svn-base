<!--生产计划 -->
<template>
  <div>
    <el-container style="display: flex; flex-direction: column;justify-content: flex-start;">

      <!-- <el-header>
         <div style=" text-align:center; ">
           <strong>生产计划</strong>
         </div>
         <div style="text-align: left;margin-left: 20px;">
           <div class="fa fa-window-restore" :class="{stamp:tap===1}" @click="tap=1" style="cursor: pointer;">分类
           </div>
           <div class="fa fa-list-ul" :class="{stamp:tap===2}" @click="tap=2" style="margin-left: 30px;cursor: pointer;">
             列表展示
           </div>
         </div>
       </el-header>-->
      <div>
        <div class="zt-tab">
          <div class="zt-tab-item " :class="tabsIndex===index?'bg-click':''"
               v-for="(item,index) in headTabs" :key="item.id" @click="handleClick($event,item.index)"
               name='0'>
            <el-badge :value="item.newData" class="el-dropdown-link">
              <span>{{item.name}}</span>
            </el-badge>
          </div>
          <!--            <el-tab-pane label="生产完成" name='3'></el-tab-pane>-->
          <!--            <el-tab-pane label="撤销" name='4'></el-tab-pane>-->
        </div>
      </div>
      <!--      v-if="tap===2"-->
      <el-container class="divce-mode">
        <el-header style="padding: 0;display:flex;justify-content:space-between;align-items: center">
          <div style="display: inline">
            <el-button slot="reference" type="primary" size="mini" style="margin-left: 5px"
                       @click="showAdvanceSearchView"><i
              class="fa fa-lg" v-bind:class="[advanceSearchViewVisible ? faangledoubleup:faangledoubledown]"
              style="margin-right: 5px"></i>高级搜索
            </el-button>
          </div>
          <div style="margin-left: 5px;margin-right: 20px;display: inline">
          </div>
        </el-header>
        <el-main style="padding-left: 0;padding-top: 0">
          <transition name="slide-fade">
            <div
              style="margin-bottom: 10px;border:1px;border-radius: 5px;border-style: solid;padding: 5px 0px 5px 0px;box-sizing:border-box;border-color: #20a0ff"
              v-show="advanceSearchViewVisible">
              <div style="display: inline">
                <el-date-picker v-model="value5" type="datetimerange" :picker-options="pickerOptions2"
                                range-separator="至"
                                start-placeholder="开始日期" end-placeholder="结束日期" align="right" clearable
                                @clear="clearPlanDates">
                </el-date-picker>
                <!--                <el-buatton type="primary" size="mini" style="margin-left: 5px" icon="el-icon-search" @click="searchData">搜索-->
                <!--                </el-buatton>-->

              </div>
              <el-row>
                <el-col :span='8'>
                  产品:
                  <el-input prefix-icon="el-icon-edit" v-model="keyproductName" size="mini" style="width: 200px"
                            placeholder="产品名称。。。">
                  </el-input>
                </el-col>
                <el-col :span='8'>
                  客户:
                  <el-input prefix-icon="el-icon-edit" v-model="keyClientName" size="mini" style="width: 200px"
                            placeholder="客户名。。。">
                  </el-input>
                </el-col>
                <el-col :span='8'>
                  操作人:
                  <el-input prefix-icon="el-icon-edit" v-model="keyempName" size="mini" style="width: 200px"
                            placeholder="员工名。。。">
                  </el-input>
                </el-col>
              </el-row>
              <el-row style="margin-top: 10px;display: flex;justify-content: flex-end;">
                <el-col :span="5" :offset="4">
                  <el-button size="mini" @click="cancelSearch">取消</el-button>
                  <el-button icon="el-icon-search" type="primary" size="mini" @click="searchData">搜索</el-button>
                </el-col>
              </el-row>
            </div>
          </transition>
          <div v-if="!forDetail">
            <div class="main-plan-progress-plan flex-plan">
              <div class="item-plan"
                   v-for="(plandetail,index) in materialList"
                   @mouseover="plandetail.onhover=true"
                   @mouseout="plandetail.onhover=false"
                   v-bind:key="plandetail.id ">
                <div class="in-plans-show" :style="{backgroundColor:plandetail.bgcolor}">
                  <!--               文字描述：-->
                  <div class="pro-plan-head">
                    <!--                 -->

                    <div class="text-alight" v-if="plandetail.clientName"> {{plandetail.clientName}}</div>
                    <div class="text-alight" v-if="plandetail.parentName"> --{{plandetail.parentName}}</div>


                    <div class="text-alight" v-if="plandetail.productName">{{plandetail.productName}}</div>
                    <div class="text-alight" v-else>暂无</div>
                  </div>
                  <div class="zt-sale-item-mid">
                    <div>
                      <u>数量:{{ plandetail.expecNum}}|完成:{{plandetail.completeNum}}枚</u>
                      <u v-if="plandetail.expecNum-plandetail.sendNum>=0">
                        |未下计划：{{plandetail.expecNum-plandetail.sendNum}}</u>
                      <u v-else>超出计划：{{plandetail.expecNum-plandetail.sendNum}}</u>
                    </div>
                    <div class="text-alight">
                      备注：{{plandetail.notes}}
                    </div>
                  </div>
                  <!--                操作按钮-->
                  <div class="zt-sale-item-end">
                    <el-button
                      type="primary"
                      @click="addNewDetail(plandetail)"
                      style="padding:2px;margin: 2px"
                      size="mini">下生产计划
                    </el-button>
                  </div>
                </div>
              </div>
              <div style="width: 100%; text-align: center;" v-if="materialList.length===0">
                暂无数据
              </div>
            </div>
            <div style="display: flex;justify-content: flex-end;margin: 2px">
              <el-pagination background :page-size="10" :pager-count="11" :current-page="currentMaterialPage"
                             @current-change="currentMaterialChange" layout="prev, pager, next"
                             :total="totalMaterialCount">
              </el-pagination>
            </div>
          </div>
          <div v-else>
            <el-collapse v-if="plans.length">
              <el-collapse-item class="plan-item-style" :name="plan.id" v-for="plan in plans" v-bind:key="plan.id">
                <template slot="title">
                  <div style="border-bottom: 1px solid #eeeeee">
                    <span >编号:{{plan.planNo}}</span>
                    <span style="margin-left: 20px;">{{plan.createDate|formatDate}}</span>
                    <i v-if="plan.details.length">({{plan.details.length}})</i>
                  </div>
                </template>
                <div class="main-plan-progress-plan flex-plan">
                  <div class="item-plan"
                       v-for="(plandetail,index) in plan.details"
                       @mouseover="plandetail.onhover=true"
                       @mouseout="plandetail.onhover=false"
                       v-bind:key="plandetail.id ">
                    <div class="in-plans-show" :style="{backgroundColor:plandetail.bgcolor}">
                      <!--               文字描述：-->
                      <template  v-if="plandetail.notes!=='addNew'">
                      <div class="pro-plan-head" v-if="plandetail&&plandetail.salesPlan&&plandetail.salesPlan.client">
                        <div class="text-alight">{{plandetail.salesPlan.client.name}}</div>
                        <div class="text-alight"
                             v-if="plandetail&&plandetail.salesPlan&&plandetail.salesPlan.product&&plandetail.salesPlan.product.producteName">
                          {{plandetail.salesPlan.product.producteName}}
                        </div>
                      </div>
                      <div class="item-mid-plan" v-if="plandetail&&plandetail.salesPlan">
                        <div>已完成数：{{plandetail.accomplishNO}}</div>
                        <div>本次下发数量:{{plandetail.actualQuantity}}</div>
                        <div>销售需求总量{{plandetail.salesPlan.quantity}}</div>
                        <div v-if="plandetail.serialNumbers.length">
                          <div v-for="serial in plandetail.serialNumbers " v-bind:key="serial.id">
                            <span>编码: {{ serial.startNo}}- {{ serial.endNo}} ;
                              <span v-if="serial.note!=null">备注:{{ serial.note}}; </span>
                              <span v-else>{{ serial.note}}; </span>
                            </span>
                          </div>
                        </div>
                      </div>
                      <!--    操作按钮-->
                      <div style="width: 130px;display: flex;flex-direction: column;justify-content: center;">
                        <div class="text-alight">
                          <div v-if="plandetail&&plandetail.salesPlan">{{plandetail.salesPlan.planString}}</div>
                          <span v-if="plandetail.note">{{plandetail.note}}</span>
                        </div>
                         <div>
                           <el-button size="mini" type="primary" @click="editeDetail(index,plandetail)" icon="el-icon-edit" circle></el-button>
                         </div>



                      </div>
                      </template>
                      <template v-else>
                        <div style="width: 100%; text-align:center;line-height: 130px;font-size: 23px;font-weight: 800;">
                          <span  @click="addNewDetail(plan)">+
                          </span>
                        </div>
                      </template>
                    </div>



                  </div>
                </div>
              </el-collapse-item>
            </el-collapse>
            <el-collapse style="text-align: center;" v-else>
              暂无数据
            </el-collapse>
            <div style="display: flex;justify-content: flex-end;margin: 2px">
              <el-pagination background :page-size="10" :pager-count="11" :current-page="currentPage"
                             @current-change="currentChange" layout="prev, pager, next" :total="totalMaterialCount">
              </el-pagination>
            </div>
          </div>


        </el-main>

      </el-container>
      <!-- 模块展示   -->
      <!--      <el-container v-else class="product-model-base">-->
      <!--        <div class="product-model-item" v-for="item in typeItems" :key="item.value" @click="used(item)">-->
      <!--          <span class="fa fa-bomb"></span>-->
      <!--          <span>{{item.name}}</span>-->
      <!--          &lt;!&ndash;          <span>（{{item.num}}）</span>&ndash;&gt;-->
      <!--        </div>-->
      <!--      </el-container>-->

    </el-container>
    <!-- 生产计划 -->
    <el-form :model="plan" :rules="rules" ref="addPlanForm" size="mini" label-width="90px">
      <el-dialog v-dialogDrag :title="dialogPlanTitle" style="padding: 0px;" :close-on-click-modal="false"
                 :visible.sync="dialogPlanVisible" @close="cancelPlanOpt" width="750px">
        <div style="width: 100% " v-if="dialogPlanVisible">
          <!--整单备注-->
          <div style="width:100%;height: auto;">
            <el-row>
              <el-form-item label="备注:" prop="notes">
                <el-input placeholder="生产计划备注..." prefix-icon="el-icon-edit" type='textarea'
                          :autosize="{ minRows: 3, maxRows: 5}" v-model="plan.notes"
                          style="width: 600px;background: #fff;">
                </el-input>
              </el-form-item>
            </el-row>
          </div>
        </div>
        <div slot="footer" class="dialog-footer">
          <el-button @click="dialogPlanVisible=false">取 消</el-button>
          <el-button type="primary" @click="addPlan('addPlanForm')">确 定</el-button>
        </div>
      </el-dialog>
    </el-form>
    <!-- 生产计划详情 -->
    <el-form :model="plan" :rules="rules" ref="addDetailForm" size="mini" label-width="90px">
      <zt-dialog height-num='590' wid-num='920' left-site='200' :is-show="dialogFormVisible"
                 zt-dialog-class="zt-sale-detail">
        <div class="zt-header-detail" slot="header">
          <span
            style="line-height:60px;font-weight: 600; font-size:20px;box-sizing: border-box;text-align: left;">生产计划</span>
          <span style="margin-left:10px;line-height:60px;font-size:14px;box-sizing: border-box;text-align: left;">编号x-0018945-v</span>
          <span @click="cancelOpt" class="colosBtn">×</span>
        </div>
        <div style="height: 100%;width: 100%;display: flex;flex-direction:column;justify-content: start;" slot="main">
          <div
            style="height: 100%;width: 100%;padding:0px 30px 10px 30px; font-size: 12px; display: flex;flex-direction: row;justify-content: start">

            <div class="productio-detail" >
              <div class="detail-head">销售详情：</div>
              <Cascader
                :data="clients"
                trigger="hover"
                change-on-select
                :not-found-text="conName"
                v-model="salse.currentClientIds"
                size="small"
                @on-change="handleClientChange">
                <div
                  style="width: 100%;min-height: 60px; display:inline-flex;flex-direction: row;justify-content:space-between;">

                  <a style="padding: 13px 13px 0 0;text-align: right;display: inline-block;width: 170px;"
                     href="javascript:void(0)">选择客户:</a>
                  <div style="display: flex;flex-direction: column;justify-content: flex-start;width: 100%;">

                    <div style="width: 100%;padding: 13px 13px 0 0;text-align: right;" v-for="item in noClient"
                         :key="item"> {{item}}
                    </div>
                  </div>
                </div>

              </Cascader>
              <!--              {currentSalePlan.specName}}-->
              <div class="plan-item">
                <div>
                  产品:
                </div>
                <div>
                  {{salse.productName}}
                </div>
                <!--                <input size="mini" :disabled="true" v-model="" class="left-input"></input>-->
              </div>
              <div class="plan-item">
                <div>
                  数量:
                </div>
                <div>
                  {{salse.expCount}}
                </div>
                <!--                数量:<input size="mini" :disabled="true" v-model="salse.expCount" class="left-input"></input>-->
              </div>
              <div class="plan-item">
                <div>
                  未下发数:
                </div>
                <div>
                  500枚
                </div>
              </div>
              <div class="plan-item">
                <div>
                  规格:
                </div>
                <div>
                  {{salse.specName}}
                </div>
              </div>
              <div class="plan-item">
                <div>
                  颜色:
                </div>
                <div>
                  {{salse.colorName}}
                </div>
              </div>
              <div class="plan-item">
                <div>
                  等级:
                </div>
                <div>
                  {{salse.degree}}
                </div>
                <!--                <select class="left-input" disabled v-model="salse.degree" style="height:22px;border: none">-->
                <!--                  <option-->
                <!--                    v-for="item in options"-->
                <!--                    :key="item.value"-->
                <!--                    :value="item.value">{{item.label}}-->
                <!--                  </option>-->
                <!--                </select>-->

              </div>

              <div class="plan-item">
                <div>
                  备注:
                </div>
                <div style="height:144px;text-align: left;">
                  {{salse.note}}
                </div>
                <!--                <div v-if="salse.note">{{salse.note}}</div>-->
                <!--                <div v-else>暂无备注</div>-->
                <!--                <div style="text-align: right;background-color: ">-->
                <!--                  <el-input prefix-icon="el-icon-edit" size="mini" class="input-class"-->
                <!--                            v-model="salse.note" type="textarea" rows="3" placeholder="注意事项。。。"></el-input>-->
                <!--                </div>-->
              </div>
              <div class="plan-item">
                <div>
                  下单人:
                </div>
                <!--                <div>-->
                <!--                  {{salse.degree}}-->
                <div v-if="salse.empName">{{salse.empName}}</div>
                <div v-else>毛正伟</div>
                <!--                </div>-->
              </div>
            </div>
            <div class="productio-detail">
              <div class="detail-head">生产详情：</div>
              <div class="detail-head-item">
                <Cascader
                  :data="clients"
                  trigger="hover"
                  change-on-select
                  :not-found-text="conName"
                  v-model="planDetail.currentClientIds"
                  size="small"
                  @on-change="handleClientChange">
                  <a class="company-head"
                     href="javascript:void(0)">选择客户:</a>
                </Cascader>
                <div class="compay-infors">
                  <div class="infor-item" v-for="item in noClient"
                       :key="item" @click='choosCompay(item)'> {{item}}
                  </div>
                </div>
              </div>


              <div class="item-right">
                <div>
                  产品:
                </div>
                <div>
                  <input size="mini" v-model="planDetail.productName" class="left-input"></input>
                </div>

              </div>
              <div class="item-right">
                <div>
                  数量:
                </div>
                <div>
                  <input size="mini" v-model="planDetail.expCount" class="left-input"></input>
                </div>
              </div>
              <div class="plan-client-item">
                <div class="">
                  <div>
                    规格:
                  </div>
                  <div>
                    <input size="mini" v-model="planDetail.specName" class="left-input"></input>
                  </div>
                </div>
                <div>
                  <div>
                    站名:
                  </div>
                  <div>
                    <input size="mini" v-model="planDetail.abbr" class="left-input"></input>
                  </div>
                </div>
              </div>
              <!--              {{currentSalePlan.colorName}}-->
              <div class="plan-client-item">
                <div>
                  <div>
                    颜色:
                  </div>
                  <div>
                    <input size="mini" v-model="planDetail.colorName" class="left-input"></input>
                  </div>
                </div>
                <div>
                  <div>
                    标记:
                  </div>
                  <div>
                    <input size="mini" v-model="planDetail.mark" class="left-input"></input>
                  </div>
                </div>
              </div>
              <!--              {{currentSalePlan.expecNum}}-->

              <div class="item-right">
                <div>
                  等级:
                </div>
                <div>
                  <select class="left-input" v-model="planDetail.expectLevel">
                    <option
                      v-for="item in options"
                      :key="item.value"
                      :value="item.value">{{item.label}}
                    </option>
                  </select>
                </div>
              </div>
              <div class="item-right">
                <div>
                  实际数量:
                </div>
                <div>
                  <input type='number' placeholder="本次生产实际数量" prefix-icon="el-icon-edit"
                         step="1000" size="mini" min="0" v-model="planDetail.quantity" @change='setEndNumber'
                         class="input-class">
                  </input>
                </div>

              </div>
              <!--              <div class="item-right">-->
              <!--                <label >备注:</label>-->
              <!--                <el-input prefix-icon="el-icon-edit" size="mini" class="input-class"-->
              <!--                          placeholder="备注信息。。。"></el-input>-->
              <!--              </div>-->
              <div class="item-right">
                <div>

                  <label>客户标记:</label>
                </div>
                <div>
                  <input prefix-icon="el-icon-edit" v-model="planDetail.mark" size="mini" class="input-class"
                         placeholder="标记。。。"></input>
                </div>
              </div>
              <div class="item-right">
                <div>是否完成:</div>
                <div class="plan-complete">
                  <el-radio v-model="planDetail.planStatus" label="1">未完成</el-radio>
                  <el-radio v-model="planDetail.planStatus" label="2">完成</el-radio>

                </div>
              </div>
              <div class="item-right item-textarea">
                <el-input prefix-icon="el-icon-edit"
                          type="textarea" v-model="planDetail.notes" :autosize="{ minRows: 2, maxRows: 5}"
                          placeholder="注意事项1。2。3。"></el-input>

              </div>

            </div>
            <div class="productio-detail">

              <div style="width: 100%;padding: 16px;text-align: left"> 编码详情：：</div>

              <div class="item-right"> 公司最近3次编码（参考值）</div>
              <div class="item-right" v-for="item in
              serialNmuers" :key="item.startNum" style="padding-left: 40px">{{item.startNum}}-{{item.endNum}}
              </div>
              <!--              <div class="item-right" style="padding-left: 40px">0700000-0788888</div>-->
              <!--              <div class="item-right" style="padding-left: 40px">0788889-0999999</div>-->
              <div class="item-right">
                <div>编码长度:</div>
                <el-input-number v-model="codeLen" size="mini" @change="codeLenSet" :min="7" :max="100" label="设置编码长度">
                </el-input-number>
              </div>
              <div class="item-right">
                <div>
                  <span>本次编码:</span>
                </div>
                <div style="width: 100%;display: inline-flex;flex-direction: row;justify-content: start;">
                  <el-input style="width: 50%;" prefix-icon="el-icon-edit" v-model="serialNumber.startNo" size="mini"
                            @change='setbyStartNo(index)' placeholder="起始编码..."></el-input>
                  <el-input style="width: 50%;" prefix-icon="el-icon-edit" v-model="serialNumber.endNo" size="mini"
                            @change='setbyEndNo(index)' placeholder="结束编码">
                  </el-input>
                </div>
              </div>
              <div class="item-right">
                <div style="width: 67px;">
                  备注：
                </div>
                <div style="width: 100%;">
                  <el-input prefix-icon="el-icon-edit" v-model="serialNumber.note" size="mini"
                            :autosize="{ minRows: 2, maxRows: 5}" type="textarea" placeholder="编码备注 。。。"></el-input>
                </div>

              </div>
              <div class="plan-item-add">添加</div>
              <div v-for="item in serialEdit" :key="item.startNum" class="item-right item-span">
                <span>{{item.startNum}}-{{item.endNum}};备注:{{item.note}}</span>
                <span>
                  <i class="fa fa-pencil"></i>
                  <i class="fa fa-trash item-span-icon"></i>
                </span>
              </div>
            </div>
          </div>
          <div class="zt-dialog-detail">
            <div style="width: 200px">
              <el-button style="font-size: 12px;" @click="dialogFormVisible=false">取 消</el-button>
              <el-button style="font-size: 12px;" type="primary" @click="add('addEmpForm')">确 定</el-button>
            </div>
          </div>
        </div>
      </zt-dialog>
      <div style="width: 100%;display: flex;flex-direction: row;justify-content: center;align-items: center;'">
        <el-menu>

        </el-menu>
      </div>
    </el-form>
    <!--销售计划-->
    <el-dialog v-dialogDrag :title="dialogMaterialTitle" style="padding: 0px;" :close-on-click-modal="false"
               :visible.sync="dialogMaterialVisible" @close="cancelChoose" width="1000px">
      <div style="width: 100% " v-if="dialogMaterialVisible">
        <div style="padding: 0;display:flex;justify-content:space-between;align-items: center">
          <!-- 销售计划搜索   -->
          <div style="display: inline">
            <el-input placeholder="通过名称搜索,记得回车哦..." clearable @change="keywordsMaterialChange"
                      style="width: 300px;margin: 0;padding: 0;" size="mini"
                      @keyup.enter.native="searchMaterialData"
                      prefix-icon="el-icon-search" v-model="keyMaterialwords">
            </el-input>
            <el-button type="primary" size="mini" style="margin-left: 5px" icon="el-icon-search"
                       @click="searchMaterialData">搜索
            </el-button>
          </div>
        </div>
        <!-- 销售计划 -->
        <el-table :data="materialList" border style="width: 100%" @row-click="showRow">
          <el-table-column align="center" fixed label="当前" width="80">
            <template slot-scope="scope">
              <el-radio :label="scope.$index" v-model='selectedM'>&nbsp;</el-radio>
            </template>
          </el-table-column>
          <el-table-column align="left" label="客户名" width="150">
            <template slot-scope="scope">
              {{scope.row.client.name}}
            </template>
          </el-table-column>
          <el-table-column align="left" label="数量/完成数量/下发数">
            <template slot-scope="scope">
              {{ scope.row.quantity}}/{{scope.row.endQuantity}}/{{scope.row.nextQuantity}}枚
            </template>
          </el-table-column>
          <el-table-column align="left" label="产品名称" width="100">
            <template slot-scope="scope">
              <div v-if="scope.row.product.producteName">
                {{scope.row.product.producteName}}
              </div>
              <div v-else>暂无</div>
            </template>
          </el-table-column>
          <el-table-column align="left" label="规格" width="100">
            <template slot-scope="scope">
              {{scope.row.specification.name}}
            </template>
          </el-table-column>
          <el-table-column align="left" label="数量" width="80">
            <template slot-scope="scope">{{ scope.row.quantity}}枚</template>
          </el-table-column>
          <el-table-column prop="productNo" align="left" label="型号" width="120">
          </el-table-column>
          <el-table-column prop="notes" align="left" label="备注" width="120">
          </el-table-column>
        </el-table>
        <div style="display: flex;justify-content: flex-end;margin: 2px">
          <el-pagination background :page-size="10" :pager-count="11" :current-page="currentMaterialPage"
                         @current-change="currentMaterialChange" layout="prev, pager, next" :total="totalMaterialCount">
          </el-pagination>
        </div>
      </div>
      <div slot="footer" class="dialog-footer">
        <el-button @click="dialogMaterialVisible=false">取 消</el-button>
        <el-button type="primary" @click="chooseMaterial()">确 定</el-button>
      </div>
    </el-dialog>

  </div>

</template>
<script>
  import {
    Message
  } from 'element-ui'
  // import {jsonToString} from "../../utils/api";
  import ZtDialog from "../ZtDialog/index";
  import ZtCascade from "../ZtDialog/ZtCascade";
  // import ElCascaderMenu from "element-ui/packages/cascader-panel/src/cascader-menu";

  export default {
    components: {ZtDialog},
    data() {
      return {
        currentClientIds: [],
        conName: '选择公司',
        noClient: [],
        tabsIndex: 0,
        headTabs: [{
          id: 1,
          index: 0,
          name: '新订单',
          newData: 2,
        }, {
          id: 2,
          index: 1,
          name: '新建',
          newData: 3,
        }, {
          id: 3,
          index: 2,
          name: '生产中',
          newData: 3,
        }, {
          id: 4,
          index: 3,
          name: '汇总'
        }],
        typeItems: [{
          value: 0,
          name: '新订单'
        }, {
          value: 1,
          name: '新建'
        }, {
          value: 2,
          name: '生产中'
        }, {
          value: 3,
          name: '生产完成'
        }, {
          value: 4,
          name: '撤销'
        }, {
          value: 5,
          name: '汇总'
        }],
        tap: 1,
        forSale: true,
        forDetail: false,
        activeName: ['1'],
        lastPlanDetail: {
          startNo: 'J00000001',
          endNo: "J00000100"
        },
        lastPlanproductionPlanDetails: [{
          startNo: 'J00000001',
          endNo: "J00000100"
        }, {
          startNo: 'K00000001',
          endNo: "K00000100"
        }],
        // 月份使用？
        pickerOptions2: {
          shortcuts: [{
            text: '最近一周',
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);
              picker.$emit('pick', [start, end]);
            }
          }, {
            text: '最近一个月',
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);
              picker.$emit('pick', [start, end]);
            }
          }, {
            text: '最近三个月',
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);
              picker.$emit('pick', [start, end]);
            }
          }]
        },
        value4: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],
        value5: '',
        //***********************************________*******************************
        keywords: '',
        tableLoading: false,
        advanceSearchViewVisible: false,
        rules: {
          // note: [{required: true, message: '必填:备注', trigger: 'blur'}],
        },
        types: 2,
        midProduct: [],
        plans: [{
          createDate: new Date(),
          planNo: 'p0021111',
          details: [{
            salesPlan: {
              client: {
                name: '小黑'
              },
              specification: {
                name: '300mm'
              },
              color: {
                name: '黄色'
              },
              quantity: 1000,
            },
            accomplishNO: 500,
            actualQuantity: 300,
            planString: '第一次下发，500',
            note: '紧急任务',
            serialNumbers: [{
              endNo: '500',
              startNo: '001',
              note: '备注',
            }]
          }]
        }],
        clients: [],
        units: [],
        selectsales: [],
        dialogTitle: '',
        currentPage: 1,
        totalCount: -1,
        // 原材料
        totalMaterialCount: -1,
        keyMaterialwords: '',
        currentMaterialPage: 1,
        plan: {
          id: 0,
          notes: '', //整单备注
          productionPlanNo: '', //整单编号
          productionPlanDetails: '',
        },
        detail: {
          id: 0,
          actualQuantity: '',
          salesPlanId: '',
          note: '',
          salesPlan: {}, //销售计划
          serialNumbers: [],
          type: 'new',
          status: 1,
          productionPlanSerialNumber: '',
          productionPlanId: 0,
        },
        serialNmuers: [{
          startNum: "0015554",
          endNum: '0699999',
          note: '1'
        }, {
          startNum: "0700000",
          endNum: '0788888',
          note: '2'
        }, {
          startNum: "0788889",
          endNum: '0999999',
          note: '3'
        }],
        serialEdit: [{
          startNum: 'i0015554',
          endNum: 'i0699999',
          note: '1'
        }, {
          startNum: 'k0700000',
          endNum: 'k0788888',
          note: '1'
        }],
        //销售计划 信息展示
        radio: '1',
        salse: {
          degree: '重要',
          expCount: '1000000',
          colorName: '黄色',
          specName: '750mm',
          currentClientIds: [],
          note: '关关雎鸠，在河之洲，窈窕淑女，君子好逑，求之不得',
          empName: '小黑',
          productName: '18s',
        },
        planDetail: {
          currentClientIds: [],
          productName: '',
          expCount: '',
          specName: '',
          abbr: '',
          colorName: '',
          mark: '',
          degree: '',
          expectLevel: '',
          quantity: '',
          planStatus: '1',
          notes: "",
        },
        serialNumbers: [],
        serialNumber: {
          sid: 1,
          id: 0,
          startNo: '',
          endNo: '',
          note: '',
          productId: 0,
          clientId: 0,
          type: "new"
        },
        productionPlanDetails: [],
        dialogFormVisible: false,
        currentRowData: {}, //当前选中行数据
        currentIndex: '', //当前选中行号
        depTextColor: '',
        showOrHidePop: false,
        showHidePop: false,
        defaultProps: {
          label: 'name',
          isLeaf: 'leaf',
          children: 'child'
        },
        maxSid: 0,
        currentDeleteData: [],
        materials: [],
        materialList: [],
        products: [],
        dialogMaterialVisible: false,
        dialogMaterialTitle: '请选择销售计划',
        selectSalePlan: {}, //当前选择的原料
        selectedM: {},
        filterText: '',
        lastPlanDetail: '', //最后一次计划详情;
        crrentSelectShop: {}, //当前选中的公司；
        isCurrentShop: true,
        isprarent: false,
        sugestParentstartNo: '', //..公司
        sugestParentEndNo: '', //公司结束编号
        sugestSelfEndNumbers: '',
        sugestSelfNumbers: '', //仅子公司
        currentParentShop: {},
        currentParentShops: [],
        currentShop: {},
        currentShops: [],
        serialNuberDeleted: [], //删除编号集合
        serialNuberUpdate: [], //更新编号集合
        serialNuberList: [], //编号集合
        serialNuberOld: [],//原编码集合；
        serialNuberNew: [],//新增数组
        planDetails: [],
        dialogPlanVisible: false,
        dialogPlanTitle: '生产计划',
        currntPlanRow: {},
        codeLen: 1,
        isEdite: true,
        currentSalePlan: {},
        selectedStep: {},
        manageStatus: 1,
        activePanel: '0',
        //搜索
        advanceSearchViewVisible: false,
        faangledoubleup: 'fa-angle-double-up',
        faangledoubledown: 'fa-angle-double-down',
        keyproductName: '',
        keyClientName: '',
        keyempName: '',
        startDate: '',
        endDate: '',
        options: [{
          value: 1,
          label: '紧急'
        }, {
          value: 2,
          label: '加急'
        }, {
          value: 3,
          label: '备货'
        }, {
          value: 4,
          label: '正常'
        }, {
          value: 5,
          label: '特殊'
        }],
        selectedMore2: [],
        currStructure: [],
        structure: [],
        todayPlan:{
          plan:{
            createDate:new Date(),
          }
        }
      }
    },
    mounted: function () {
      this.initData();
      // this.genOrganizaion();
    },

    methods: {
      //客户级联选择
      handleClientChange(value, selectedData) {
        this.noClient = selectedData.map(o => o.label).join(', ');
        this.noClient = this.noClient.split(', ');
      },
      showAdvanceSearchView() {
        this.advanceSearchViewVisible = !this.advanceSearchViewVisible;
        this.keywords = '';
        if (!this.advanceSearchViewVisible) {
          this.emptyData();
          // this.beginDateScope = '';
          this.loadData();
        }
      },
      cancelSearch() {
        this.advanceSearchViewVisible = false;
        this.emptyData();
        this.keyproductName = '',
          this.keyClientName = '',
          this.keyempName = '',

          this.loadData();
      },
      clearPlanDates() {
        this.startDate = '';
        this.endDate = '';
      },
      // used(item) {
      //   //跳转 查询
      //   this.handleClick('', '', item.value + "")
      // },
      handleClick(e, cli, status) {
        console.log(e);
        console.log(cli);
        let code = cli + "";
        this.tabsIndex = cli;
        let sale;
        switch (code) {
          case '0':
            sale = true;
            break;
          case "1":
            this.manageStatus = 1;
            break;
          case "2":
            this.manageStatus = 2;
            break;
          case "3":
            this.manageStatus = 3;
            break;
          // case "4":
          //   this.manageStatus = 4;
          //   break;
          case "5":
            this.manageStatus = '';
            break;
          default:
            break;
        }
        if (!sale) {
          this.loadData();

        } else {
          this.loadMaterial();
          console.log('matters');

        }
      },
      //选择使用该编码；
      useCurrentNo(mo) {
        if (this.serialNumbers[0]) {
          this.serialNumbers[0].startNo = this.sugestStartNo(mo.endNo, 1);
          this.serialNumbers[0].note = '';
          this.serialNumbers[0].clientId = this.crrentSelectShop.id;
          this.serialNumbers[0].productId = this.detail.proId;
          if (this.detail.actualQuantity) {
            this.serialNumbers[0].endNo = this.sugestStartNo(this.sugestStartNo(mo.endNo, 1), this.detail.actualQuantity);
          }
        }
      },
      plandetailStatus(row) {
        let str = "";
        switch (row.status) {
          case 1:
            str = '新建';
            break;
          case 2:
            str = '开始生产';
            break;
          case 3:
            str = '生产完成';
            break;
          case 4:
            str = '生产撤销';
            break;
          default:
            break;
        }
        return str;
      },
      //编码长度设置
      codeLenSet(e) {
        let that = this;
        console.log(e);
        this.codeLen = e;
        if (this.serialNumbers.length) {
          this.serialNumbers.forEach(function (val) {
            if (val.startNo !== '' && val.startNo !== undefined) {
              val.startNo = that.sugestStartNo(val.startNo, 1);
            }
            if (val.endNo !== '' && val.endNo !== undefined) {
              val.endNo = that.sugestStartNo(val.endNo, 1);
            }
          })
        }


      },
      // 生产计划撤销
      cancelPlanOpt() {
        this.dialogFormVisible = false;
        this.plan = {
          notes: '', //整单备注
          productionPlanNo: '', //整单编号
          productionPlanDetails: '',
        };
        this.selectSalePlan = {};
        this.loadData();
      },
      editePlan(index, row) {
        this.dialogTitle = "修改计划单";
        let that = this;
        this.plan = row;
        let plans = _.cloneDeep(row);
        let currentDetail = plans.details;

        currentDetail.forEach(v => {
          delete v.salesPlan;
        });
        let str = jsonToString(currentDetail);
        this.plan.productionPlanDetails = str;
        that.dialogPlanVisible = true;
      },
      //生产计划新增\修改
      addPlan(addPlanForm) {
        let _this = this;
        this.$refs[addPlanForm].validate((valid) => {
          if (valid) {
            if (_this.plan.id) {
              //更新
              _this.tableLoading = true;
              console.log(_this.plan);
              _this.postRequest("/productionplan/update", _this.plan).then(resp => {
                _this.tableLoading = false;
                if (resp && resp.status === 200 && resp.data.success) {
                  _this.dialogPlanVisible = false;

                  _this.loadData();
                  _this.emptyData();
                  _this.emptyDetail();
                  _this.clearSerialNumbers();
                }
              })
            } else {
              //添加
              _this.tableLoading = true;
              console.log(_this.plan);
              _this.postRequest("/productionplan/add", _this.plan).then(resp => {
                _this.tableLoading = false;
                if (resp && resp.status === 200) {
                  _this.dialogPlanVisible = false;
                  _this.loadData();
                  _this.emptyData();
                  _this.emptyDetail();
                  _this.clearSerialNumbers();
                }
              })
            }
          } else {
            return false;
          }
        });

      },
      // 编号添加***********
      serialNumberAdd() {
        let sid = 0;
        if (this.serialNumbers.length) {
          let maxId = 0;
          //找出最大的Id+1
          this.serialNumbers.forEach(function (v, i, arr) {
            maxId = v.sid > maxId ? v.sid : maxId;
          });
          sid = maxId + 1;
        } else {
          sid = 1;
        }
        this.serialNumbers.push({
          sid: sid,
          id: 0,
          note: '',
          startNo: '',
          endNo: '',
          clientId: 0,
          productId: 0,
          type: "new"
        });
      },
      // 删除编号
      deletSerialNo(index) {
        let deletData = this.serialNumbers.splice(index, 1);
        let conditions = deletData[0].endNo === '' ||
          deletData[0].startNo === '' ||
          deletData[0].type === 'new';
        if (!conditions) {
          deletData[0].type = 'delete';
          this.serialNuberDeleted.push(deletData[0])
        }
        console.log(deletData);
      },
      // 编号***********
      filterNode(value, data) {
        if (!value) return true;
        return data.label.indexOf(value) !== -1;
      },
      showRow(row) {
        this.selectedM = this.materialList.indexOf(row);
        this.selectSalePlan = row;
        console.log(this.selectSalePlan);
      },
      showMaterial() {
        this.loadMaterial();
      },
      chooseMaterial() {
        console.log('选择了销售计划！')
        let vm = this;
        if (this.selectSalePlan.id > 0) {
          const msg = this.selectSalePlan.client.name + "，     产品：" + this.selectSalePlan.product.producteName + ";"
          this.$confirm('您当前选择 ：客户' + msg + " 确认选择该销售计划吗？", '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning'
          }).then(() => {
            vm.setDetailData(vm);
          }).catch(() => {
            this.$message({
              type: 'info',
              message: '已取消'
            });
          });
        } else {
          this.$message({
            type: 'info',
            message: '请选择！'
          })
        }

      },
      //选择产品； 设置产品是那个。。。
      setDetailData() {
        let that = this;
        console.log(v + "=*-*=");
        that.currentSalePlan = that.selectSalePlan;
        let v = that.selectSalePlan;
        that.detail.salesPlanId = v.id;
        // that.detail.salesPlan = v;

        that.detail.specification = v.specName;
        that.detail.productNo = v.productName;
        that.getCurrentPlans();
        this.dialogMaterialVisible = false;
      },
      // 取消选择
      cancelChoose: function () {
        console.log('选择框关闭');
        this.selectSalePlan = {};
        this.selectedM = {};
      },
      //格式化
      formatStatus: function (row) {
        return row.materialType === 1 ? '已确认' : '未确认';
      },
      //materials: [["手套", 1, 38]]
      //清理编号和查询结果
      clearSerialNumbers() {
        let that = this;
        that.serialNumbers = [];
        that.selectsales = [];
        that.detail.serialNumbers = [];
      },

      editeDetail(index, row) {
        console.log('詳情：' + row);
        this.detail = row;
        if (row.salesPlan) {
          this.detail.salesPlanId = row.salesPlan.id;
          this.currentSalePlan = row.salesPlan;
          this.selectSalePlan = row.salesPlan;
        }
        this.isEdite = false;
        this.serialNumbers = row.serialNumbers;
        if (this.serialNumbers.length) {
          this.serialNumbers.forEach(value => {
            value.type = 'old';
          })
        }
        this.serialNuberOld = _.cloneDeep(this.serialNumbers);
        this.getCurrentPlans();
        this.dialogFormVisible = true;
      },
      deleteDetail(index, row) {
        this.$confirm('此操作将删除该纪录, 是否继续?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          this.detailDelete(row.id);
        }).catch(() => {
        });
      },
      detailDelete(ids) {
        this.tableLoading = true;
        let _this = this;
        this.getRequest("/productionplandetails/deletmark?id=" + ids).then(resp => {
          _this.tableLoading = false;
          if (resp && resp.status == 200) {
            let data = resp.data;
            _this.loadData();
          }
        })


      },
      emptyDetail() {
        this.detail = {
          id: 0,
          actualQuantity: '',
          salesPlanId: '',
          note: '',
          salesPlan: {}, //销售计划
          serialNumbers: [],
          type: 'new',
          status: 3,
          productNo: '',
          specifications: '',
          productionPlanId: 0,
        };
        this.selectedStep = {};
        this.selectSteps = [];
      },
      initData() {
        let _this = this;
        // _this.loadData();
        _this.handleClick("", 0, "");
        this.getRequest("/productionplan/basedata").then(resp => {
          if (resp && resp.status === 200) {
            let data = resp.data;
            _this.clients = _this.toTree(data.root.clients);
            // _this.genOrganizaion()
            // _this.clients = data.root.clients;
            _this.midProduct = _this.materials.concat(_this.midProduct);
            let pro = [];
            let p = data.root.products;
            p.forEach(function (v) {
              pro.push({
                id: v[0],
                producteName: v[1],
                specification: v[2],
                proType: v[3],
                mark: v[4],
                color: v[5],
              })
            });
            _this.products = pro;
          }
        })

      },
      keywordsChange(val) {
        if (val === '') {
          this.loadData();
        }
      },
      keywordsMaterialChange(val) {
        if (val === '') {
          this.loadMaterial();
        }
      },

      showCurrentNo() {

        if (this.isprarent) {
          this.isprarent = false;
        } else {
          this.isprarent = true;
        }
        // return  this.ispraren!==true?false:true;
      },

      showDetails(row) {
        console.log("show")
        this.planDetails = [];
        this.currntPlanRow = row;
        let detailed = row.details || [], show = [];
        if (detailed.length) {
          detailed.forEach(function (v) {
            if (v.enabled) {
              show.push(v)
            }
          })
          this.planDetails = show;
        }
        this.detail.productionPlanId = row.id;
        this.plan.id = row.id;
      },

      getCurrentPlans() { //???
        let that = this;
        this.getRequest("/productionplan/getPlanDetails?clientId=" + that.selectSalePlan.clientId + "&productId=" +
          that.selectSalePlan.productId).then(resp => {
          that.tableLoading = false;
          if (resp && resp.status === 200 && resp.data.success) {
            let data = resp.data.root;
            let parentNo = data.parent || [];
            if (parentNo.length) {
              that.currentParentShop = parentNo[0];
              that.currentParentShops = [];
              for (let i = 0, n = parentNo.length; i < n; i++) {
                if (i < 3) {
                  that.currentParentShops.push(parentNo[i])
                }
              }
            } else { //设置为起始的000001;
              let pNo = that.sugestStartNo("1", 1);
              that.currentParentShop = {
                startNo: '00000001',
                endNo: '00000001',
                note: ''
              };
              that.setStartSerialNo(pNo, that.sugestParentEndNo.endNo, "parent");
            }
            // that.currentShop
            let child = data.self || [];
            if (child.length) {

              that.currentShop = child[0];
              that.currentShops = [];

              for (let i = 0, n = child.length; i < n; i++) {
                if (i < 3) {
                  that.currentShops.push(child[i])
                }
              }
            } else { //设置为起始的000001;
              that.sugestSelfNumbers = that.sugestStartNo('1', 1);
              that.currentShop = {
                startNo: '00000001',
                endNo: '00000001',
                note: '',
              };
            }
          }
        })
      },

      setEndNumber: function (e) {
        console.log(e) + "********************8";
        let that = this;
        if (this.serialNumbers[0].startNo !== '') {
          that.sugestSelfEndNumbers = that.sugestStartNo(this.serialNumbers[0].startNo, parseInt(e));
          if (that.sugestSelfEndNumbers) {
            this.serialNumbers[0].endNo = that.sugestSelfEndNumbers;
            this.serialNumbers[0].note = '';
            this.serialNumbers[0].clientId = this.crrentSelectShop.id;
            this.serialNumbers[0].productId = this.detail.proId;
          }
        } else {
          let baseData = 1;
          for (let i = 0; i < this.codeLen - 1; i++) {
            baseData = '0' + baseData;
          }
          that.setCurrentEndData(baseData, e, 0);
        }

      },
      //根据起始编码 设置其他编码
      setbyStartNo(index) {
        let x = this.serialNumbers[index].startNo
        if (index === 0) {
          console.log(x + "********************startNO" + index);
          if (x.toString().length > this.codeLen) {
            Message("编码长度错误!");
            return false;
          }
          if (this.detail.actualQuantity !== '') {
            this.serialNumbers[index].endNo = this.sugestStartNo(x, this.detail.actualQuantity);

          }
        }
        this.serialNumbers[index].startNo = this.sugestStartNo(x, 1)

      },
      //设置结束编码
      setbyEndNo(index) {
        let x = this.serialNumbers[index].endNo;
        this.serialNumbers[index].endNo = this.sugestStartNo(x, 1)

      },
      //设置结束时间
      setCurrentEndData(baseData, e, index) {
        console.log(index);
        if (index === 0) {
          let currentData = this.sugestStartNo(baseData, e);
          this.serialNumbers[index].endNo = currentData;
          this.serialNumbers[index].startNo = baseData;
        }
      },

      //生成起始编号:
      sugestStartNo(str, nu) {
        let that = this;
        // let str = "ox002VtII0000UUY";
        let getNum = function (str, isFilter) {
          isFilter = isFilter || false;
          if (typeof str === "string") {
            // let arr = Str.match(/(0\d{2,})|([1-9]\d+)/g);
            //"/[1-9]\d{1,}/g",表示匹配1到9,一位数以上的数字(不包括一位数).
            //"/\d{2,}/g",  表示匹配至少二个数字至多无穷位数字
            let arr = str.match(isFilter ? /[0-9]\d{1,}/g : /\d{1,}/g);
            console.log(arr);
            return arr.map(function (item) {
              //转换为整数，
              //但是提取出来的数字，如果是连续的多个0会被改为一个0，如000---->0，
              //或者0开头的连续非零数字，比如015，会被改为15，这是一个坑
              // return parseInt(item);
              //字符串，连续的多个0也会存在，不会被去掉
              return item;
            });
          } else {
            return [];
          }
        };
        let startIndex = str.indexOf(getNum(str)[0]);
        let startStr = str.substr(0, startIndex);
        let endStr = str.substr(startIndex + getNum(str)[0].length, str.length - 1);
        //中间数字的长度;

        let currentNumber = parseInt(getNum(str)[0]) + parseInt(nu) - 1;
        let cNo = currentNumber.toString().length;

        let subNo = (this.codeLen - cNo - startStr.length - endStr.length);
        if (subNo) {
          // 位数不够的补零
          for (let i = 0; i < subNo; i++) {
            currentNumber = "0" + currentNumber;
          }
        }
        const resultStr = startStr + currentNumber + endStr;
        if (resultStr.length > this.codeLen) {
          this.$message({type: 'info', message: '长度超过设置的编码长度'})
        }
        return resultStr;

      },
      // 设置起始编号:type ;self  parent
      setStartSerialNo(sugestNo, endNo, type) {
        if (this.serialNumbers.length) {
          this.serialNumbers[0].startNo = sugestNo;
          if (endNo !== '') {
            this.serialNumbers[0].endNo = endNo;
          } else {
            this.serialNumbers[0].endNo = '';
          }
          this.serialNumbers[0].note = '';
        }

      },

      clearChoose() {
        this.detail.clientId = 0;
        this.detail.clientName = "";
      },
      showDepTree() {
        this.showHidePop = !this.showHidePop;
      },
      selectChange(e) {
        let that = this;
        console.log(e);
        if (that.units) {
          that.units.forEach(function (v, arr) {
            if (v.id == e) {
              console.log(v.id);
              that.detail.unitName = v.name;

            }
          })
        }

      },
      currentChange(currentChange) {
        this.currentPage = currentChange;
        console.log(this.currentPage);
        this.loadData();
      },
      currentMaterialChange(currentChange) {
        this.currentMaterialPage = currentChange;
        this.loadMaterial();
      },
      addAndFlushData() {
        let that = this;
        this.$confirm('是否新建生产计划?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          that.addNewPlan()
        }).catch(() => {
          this.$message({
            type: 'info',
            message: '已取消'
          });
        });

      },
      //新建 生产计划；
      addNewPlan() {
        let _this = this;
        this.plan.id = 0;
        _this.plan.note = '';
        //添加
        _this.tableLoading = true;
        console.log(_this.plan);
        _this.postRequest("/productionplan/add", _this.plan).then(resp => {
          _this.tableLoading = false;
          if (resp && resp.status === 200) {
            let data = resp.data;
            _this.dialogPlanVisible = false;
            _this.loadData();
            _this.emptyData();
            _this.emptyDetail();
          }
        })

      },
      //添加生产计划单
      addNewDetail(row) {
        console.log(row);
        this.dialogTitle = "郑铁公司生产计划单";
        let that = this;
        that.serialNumbers = [];
        that.detail.productionPlanId = row.id;
        this.plan.id = 0;
        var clietId=row.clientId;
        var idsArr=[];
        idsArr.push(clietId);

        this.salse={
          colorName:row.colorName,
          expCount:row.expecNum,
          note:row.note,
          empName:row.empName,
          productName:row.productName,
          currentClientIds:idsArr,
          specName:row.specName,
        }
        // this.serialNumber = {
        //   sid: 1,
        //   id: 0,
        //   startNo: '',
        //   endNo: '',
        //   note: '',
        //   clientId: 0,
        //   productId: 0,
        //   type: "new"
        // };
        //查询该订单相关公司上次的编号；
        // this.selectSalePlan = row;
        this.setDetailData();
        this.isEdite = true;
        that.dialogFormVisible = true;
      },
      //简
      searchData() {
        if (this.value5 && this.value5.length) {
          this.startDate = this.formatDateTime(this.value5[0]);
          this.endDate = this.formatDateTime(this.value5[1]);
          console.log(this.startDate);
        }
        this.handleClick();
      },
      searchMaterialData() {
        this.loadMaterial();
      },
      //添加详情
      add(addDetailForm) {
        let _this = this;
        console.log("addbox！！！！");
        if (this.detail.actualQuantity === '' || this.detail.actualQuantity === undefined) {
          Message('请输入数量！');
          return false;
        }
        if (this.detail.salesPlanId === '') {
          Message('请选择销售计划');
          return false;
        }

        this.detail.serialNumbers = this.serialNumbers;
        this.productionPlanDetails.push(this.detail);
        let plans = _.cloneDeep(this.plan);
        let currentDetail = _.cloneDeep(this.productionPlanDetails);
        currentDetail.forEach(function (v) {
          delete v.salesPlan;
        });
        let str = this.jsonToString(currentDetail);
        plans.productionPlanDetails = str;
        this.$refs[addDetailForm].validate((valid) => {
          if (valid) {
            if (this.plan.id) {
              //更新
              _this.tableLoading = true;
              //对比两个数组this.serialNuberOld  && this.detail.serialNumbers;
              _this.serialNuberList = _this.getNowSerialNumbers();
              let plandetail = _.cloneDeep(_this.detail);
              let detailStr = jsonToString(_this.detail.serialNumbers);
              plandetail.productionPlanSerialNumber = detailStr;
              plandetail.productionPlanId = _this.plan.id;
              delete plandetail.salesPlan;
              delete plandetail.serialNumbers;
              _this.postRequest("/productionplandetails/update", plandetail).then(resp => {
                _this.tableLoading = false;
                if (resp && resp.status === 200) {
                  _this.dialogFormVisible = false;
                  _this.loadData();
                  _this.emptyData();
                  _this.emptyDetail();
                  _this.clearSerialNumbers();
                  _this.showDetails(_this.currntPlanRow);
                }
              })
            } else {
              //添加
              this.tableLoading = true;
              console.log(plans);
              _this.postRequest("/productionplan/add", plans).then(resp => {
                _this.tableLoading = false;
                if (resp && resp.status === 200) {
                  let data = resp.data;
                  _this.dialogFormVisible = false;
                  _this.loadData();
                  _this.emptyData();
                  _this.emptyDetail();
                  _this.clearSerialNumbers();
                  _this.showDetails(_this.currntPlanRow);
                }
              })
            }
          } else {
            return false;
          }
        });
      },

      cancelOpt() {
        this.dialogFormVisible = false;
        this.clearChoose();
        this.isEdite = true;
        this.currentSalePlan = {}
        this.clearSerialNumbers();
        this.emptyDetail();
        this.handleClick("", 0, "");
        console.log('o(*￣︶￣*)o')
      },
      deleteData(row) {
        this.$confirm('此操作将删除该纪录, 是否继续?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          this.doDelete(row.id);
        }).catch(() => {
        });
      },
      doDelete(ids) {
        this.tableLoading = true;
        let _this = this;
        this.getRequest("/productionplan/deletmark?id=" + ids).then(resp => {
          _this.tableLoading = false;
          if (resp && resp.status === 200 && resp.data.success) {
            _this.loadData();
          }
        })
      },
      //加载页面
      loadData() {
        let _this = this;
        _this.forDetail = true;
        this.tableLoading = true;
        this.getRequest("/productionplan/findbypage?page="
          + this.currentPage
          + "&size=10&status=" + this.manageStatus
          + "&productName=" + this.keyproductName
          + "&empName=" + this.keyempName
          + "&clientName=" + this.keyClientName
          + "&startDate=" + this.startDate
          + "&endDate=" + this.endDate
        )
          .then(
            resp => {
              _this.tableLoading = false;
              if (resp && resp.status === 200 && resp.data.success) {
                let list = resp.data.data || [];
                _this.plans = _this.preForData(list);//
                let date= _this.formatDate(new Date());
                console.log(date,_this.formatDate(_this.plans[0].createDate))
                if(_this.formatDate(new Date())===_this.formatDate(_this.plans[0].createDate)){
                    _this.plans[0].details.unshift({
                      notes:'addNew',
                      bgcolor:'#ffffff',
                    })
                }else{//没有当天的
                  //创建当天的订单 和详情
                  _this.plans.unshift({
                    planNo:"0005",
                    createDate:new Date(),
                    details:[{
                      notes:'addNew',
                      bgcolor:'#ffffff',
                    }]
                  })
                }
                 //展示第一个条数据
                // if (!_this.currntPlanRow.id && _this.plans.length) {
                //   //修改 并添加默认数据
                //
                //   _this.currntPlanRow = _this.plans[0];
                //
                //   _this.showDetails(_this.plans[0])
                // }
                _this.totalCount = resp.data.total;
                _this.emptyData();
              } else {
                this.$message({type: 'infor', message: '查询失败'})
              }
            })
      },
      loadMaterial() {
        let _this = this;
        _this.forDetail = false;
        this.tableLoading = true;
        this.getRequest("/sales/findplan?page="
          + this.currentMaterialPage
          + "&size=10&status=" + this.manageStatus
          + "&start=" + this.startDate
          + "&end=" + this.endDate
          + "&clientName=" + this.keyClientName
          + "&productName=" + this.keyproductName
          + "&empName=" + this.keyempName
        ).then(resp => {
          this.tableLoading = false;
          if (resp && resp.status === 200) {
            _this.materialList = _this.preMattrialData(resp.data.data);
            _this.totalMaterialCount = resp.data.total;
            _this.forSale = true;
            _this.forDetail = false;
            // _this.dialogMaterialVisible = true;
            // _this.emptyData();
            // 清除选择的行
          }
        })
      },
      preMattrialData(data) {
        let arr = [];
        if (data.length) {
          for (let i = data.length - 1; i >= 0; i--) {
            let e = data[i];
            let color = e[1];
            let bgColor = '#ffffff';
            switch (color) {
              case '1':
                bgColor = "#eeeeee";
                break;
              case '2':
                bgColor = "yellowgreen";
                break;
              case '3':
                bgColor = "green";
                break;
              case '4':
                bgColor = "#e4e4e4";
                break;
              case '5':
                bgColor = "#2974df";
                break;
              case '6':
                bgColor = "#85ce61";
                break;
              default:
                break;
            }
            arr.push({
              id: e[0],
              state: e[1],
              clientName: e[2],
              productName: e[3],
              empName: e[4],
              specName: e[5],
              createDate: e[6],
              expecNum: e[7],
              completeNum: e[8],
              sendNum: e[9],
              planString: e[10],
              note: e[11],
              colorName: e[12],
              parentName: e[13],
              clientId: e[14],
              productId: e[15],
              bgColor: bgColor
            });

          }
        }
        return arr;
      },
      emptyData() {
        this.productionPlanDetails = [];
        this.plan = {
          id: 0,
          notes: '', //整单备注
          productionPlanNo: '', //整单编号
          productionPlanDetails: '',
        }
        if (this.currntPlanRow) {
          this.plan.id = this.currntPlanRow.id;
        }
      },
      preForData(data) {
        let that = this;
        if (data.length) {
          for (let i = data.length - 1; i >= 0; i--) {
            let d = data[i];

            if (d.details.length) {
              for (let j = d.details.length - 1; j >= 0; j--) {
                let e = d.details[j];
                e.onhover = false;
                if (e.status)
                  switch (e.status) {
                    case 1:
                      e.bgcolor = "#FFFFFF";
                      break;
                    case 2:
                      e.bgcolor = "#13ce66";
                      break;
                    case 3:
                      e.bgcolor = '#13ce66';
                      break
                    case 4:
                      e.bgcolor = "#e9e9e9";
                      break;
                    default:
                      break;
                  }
              }
            }
          }
        }
        return data;
      },
      //比较两个数组 同时返回新的数组
      getNowSerialNumbers() {
        let that = this;
        for (let i = 0, n = that.detail.serialNumbers.length; i < n; i++) {
          for (let j = 0, m = that.serialNuberOld.length; j < m; j++) {
            if (i == j) {
              let fal = JSON.stringify(that.serialNuberOld[j]) === JSON.stringify(that.detail.serialNumbers[i])
                && that.serialNuberOld[j].id === that.detail.serialNumbers[i].id;
              if (!fal) {
                that.detail.serialNumbers[i].type = 'update'
                that.serialNuberUpdate.push(that.detail.serialNumbers[i]);
              }
            }
          }
        }
        if (that.detail.serialNumbers.length > that.serialNuberOld.length) {
          for (let i = that.serialNuberOld.length; i < that.detail.serialNumbers.length; i++) {
            that.detail.serialNumbers[i].type = 'new';
            that.serialNuberNew.push(that.detail.serialNumbers[i])
          }
        }
        if (that.detail.serialNumbers.length < that.serialNuberOld.length) {
          for (let i = that.detail.serialNumbers.length; i < that.serialNuberOld.length; i++) {
            that.serialNuberOld[i].type = 'delete';
            that.serialNuberDeleted.push(that.serialNuberOld[i])
          }
        }

        let list = that.serialNuberUpdate.concat(that.serialNuberDeleted, that.serialNuberNew);
        return list;
      },
      //根据选择的客户获取之前编码值
      choosCompay(item) {
        console.log('item' + item);

      },
      toTree(data) {
        console.log('toTree');
        let that = this;
        let result = []
        if (!Array.isArray(data)) {
          return result
        }
        var treeData = [];
        data.forEach(item => {
          treeData.push({
            'value': item.id,
            'label': item.name,
            'parentId': item.parentClientId
          })
        });
        let map = {};
        treeData.forEach(item => {
          map[item.value] = item;
        });
        treeData.forEach(item => {
          let parent = map[item.parentId];
          if (parent) {
            (parent.children || (parent.children = [])).push(item);
          } else {
            result.push(item);
          }
        });
        result = that.getResult(result)
        console.log(result);
        //将父parentId 删除掉
        return result;
      },
      getResult(reusult) {
        let that = this;
        reusult.map(item => {
          delete item.parentId;
          if (item.children && item.children.length) {
            that.getResult(item.children)
          }
        });
        return reusult;
      }

    },


    computed: {
      routes() {
        return this.$store.state.routes
      }
    },

  }

</script>
<style>
  .current-selcetion-plan {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    padding: 5px 6px;
    background-color: #bfcbd9;
    text-align: left;
  }

  .current-selcetion-plan .plan-item {
    margin-left: 10px;
  }

  .demo-table-expand label {
    width: 50px;
    color: #2974df;
  }

  .demo-table-expand .el-form-item {
    margin-left: 10px;
    margin-bottom: 0;
    width: auto;
    background: #ffffff;
  }

  .e-rows {
    padding: 10px;
  }

  .input-class {
    width: 200px;
  }

  .shops-no {
    display: flex;
    justify-content: flex-start;
  }

  /* :row-class-name="tableRowClassName"在渲染表格的时候就调用了，不能用来响应点击事件改变行的颜色。
可以给表格添加:highlight-current-row属性，高亮显示当前行。然后通过修改css来改变颜色，像这样 */
  .el-table__body tr.current-row > td {
    background: #e6cf4d !important;
  }

  .plan-item-style {
    width: 100%;
  }

  .plan-item {
    width: 100%;
    padding: 12px 12px 0 0;
    text-align: right;
    display: flex;
    flex-direction: row;
    justify-content: start;
  }

  .plan-item > div:first-child {
    width: 46%;
    text-align: right;
  }

  .plan-item > div:last-child {
    width: 54%;
    text-align: right;
  }

  .item-right {
    width: 100%;
    padding-top: 12px;
    text-align: left;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
  }

  .item-right > div:first-child {
    width: 67px;
    text-align: center;
  }

  .item-right > div:last-child {
    width: 100%;
    text-align: left;
  }

  .plan-item-style-detail > div {
    padding: 8px;

  }


  .number-serail-title {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    margin-left: 30px;
  }

  .redColor {
    color: #00a854;
  }

  .greenColor {
    color: #2196f3;
  }

  .orangeColor {
    color: orange;
  }

  .main-plan-progress-plan {
    width: 100%;
    text-align: center;
    box-sizing: border-box;
    /*border: 1px solid red;*/
  }

  .flex-plan {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: start;
    align-items: center;
  }


  /*.flex-plan .item-plan {*/
  /*  display: -webkit-box;*/
  /*  display: -ms-flexbox;*/
  /*  display: flex;*/
  /*  min-width: 48%;*/
  /*  width: 520px;*/
  /*  height: 130px;*/
  /*  -webkit-box-orient: horizontal;*/
  /*  -webkit-box-direction: normal;*/
  /*  -ms-flex-direction: row;*/
  /*  flex-direction: row;*/
  /*  -webkit-box-pack: start;*/
  /*  -ms-flex-pack: start;*/
  /*  justify-content: flex-start;*/
  /*  list-style: none;*/
  /*  position: relative;*/
  /*  padding: 5px;*/
  /*  overflow: hidden;*/
  /*  -webkit-box-sizing: border-box;*/
  /*  box-sizing: border-box;*/
  /*  font-size: 12px;*/

  /*}*/


  .in-plans-show:hover {
    border-color: red;
    position: relative;
  }

  .pro-plan-head {
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 130px;
    text-align: center;
    background-color: #2fc5da;
  }

  .in-plans-show {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    border: 1px solid #ccc;
    margin: 5px;
    font-size: 12px;
    text-align: start;
    height: 130px;
    box-sizing: border-box;
    min-width: 520px;
  }

  .zt-sale-item-mid {
    display: flex;
    flex-direction: column;
    height: 130px;
    justify-content: center;
  }

  .zt-sale-item-end {
    display: flex;
    flex-direction: column;
    height: 130px;
    justify-content: center;
  }

  .text-alight {
    margin-left: 5px;
  }

  .item-mid-plan {
    width: 260px;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  /*——————————————————————————模块——————————————————————————————————————————————————*/
  .stamp {
    color: #2783ca;
  }

  .divce-mode {
    display: flex;
    flex-direction: column;
    padding: 0 20px;
  }

  .product-model-base {
    width: 100%;
    height: auto;
    display: flex;
    padding: 0 20px 20px 20px;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: start;
    box-sizing: border-box;
    background-color: #E5EFF1;
  }

  .product-model-item {
    box-sizing: border-box;
    height: 140px;
    width: 140px;
    overflow: hidden;
    position: relative;
    margin-top: 10px;
    color: #ffffff;
    font-weight: 700;
    display: flex;
    flex-direction: column;
    background-color: #2fc5da;
    margin-left: 25px;
    padding: 30px;
    box-shadow: 2px 4px 20px #005377;
    cursor: pointer;
  }

  /***************************输入框**********************************/
  .el-input__inner {
    -webkit-appearance: none;
    background-color: #FFF;
    background-image: none;
    border-radius: 4px;
    /*border: 1px solid #DCDFE6;*/
    border: none;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    color: #606266;
    display: inline-block;
    font-size: inherit;
    height: 40px;
    line-height: 40px;
    outline: 0;
    padding: 0 15px;
    -webkit-transition: border-color .2s cubic-bezier(.645, .045, .355, 1);
    transition: border-color .2s cubic-bezier(.645, .045, .355, 1);
    width: 100%;
  }

  .el-input__inner:focus {
    -webkit-appearance: none;
    background-color: #FFF;
    background-image: none;
    border-radius: 4px;
    border: 1px solid #66B1FF;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    color: #606266;
    display: inline-block;
    font-size: inherit;


    outline: 0;
    padding: 0 15px;
    -webkit-transition: border-color .2s cubic-bezier(.645, .045, .355, 1);
    transition: border-color .2s cubic-bezier(.645, .045, .355, 1);
    width: 100%;
  }

  .el-input--prefix .el-input__inner:focus {
    padding-left: 30px;
  }

  .el-textarea__inner {
    width: 200px;
    border: none;
  }

  .el-textarea__inner:focus {
    display: block;
    resize: vertical;
    padding: 5px 15px;
    line-height: 1.5;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: 100%;
    font-size: inherit;
    color: #606266;
    background-color: #FFF;
    background-image: none;
    border: 1px solid #66B1FF;
    border-radius: 4px;
    -webkit-transition: border-color .2s cubic-bezier(.645, .045, .355, 1);
    transition: border-color .2s cubic-bezier(.645, .045, .355, 1);
  }

  .el-input__icon:after {
    display: none;
  }

  .zt-tab {
    height: 30px;
    width: auto;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    box-sizing: border-box;
    font-size: 12px;

    justify-content: flex-start;
    color: white;
  }

  .zt-tab-item {
    display: flex;
    position: relative;
    padding-left: 16px;
    width: 70px;
    text-align: center;
    line-height: 30px;
    background-color: #2fc5da;
    border-right: 1px solid #ffffff;
    border-radius: 8%;
    align-items: center;
  }

  .zt-tab-item span {
    display: block;
    width: 100%;
    text-align: center;
  }

  .zt-tab-item:hover {
    opacity: 0.7;
    cursor: pointer;
  }

  .bg-click {
    background-color: #85CE61;
  }

  .zt-sale-detail {
    width: 1000px;
    height: 600px;
    margin-left: 160px;
  }

  .zt-dialog-detail {
    width: 100%;
    /*height: 20px;*/
    align-items: flex-end;
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
  }

  .colosBtn {
    position: absolute;
    top: 10px;
    right: 20px;
    padding: 0;
    background: 0 0;
    border: none;
    outline: 0;
    color: #C0CFE3;
    cursor: pointer;
    font-size: 20px;
  }

  .zt-header-detail {
    text-align: left;
    height: 60px;
    padding: 5px 0 5px 120px;
    line-height: 40px;
    font-size: 14px;
  }

  .item-span {
    padding-left: 40px;
    display: inline-flex;
    flex-direction: row;
    justify-content: space-between;
  }

  .item-span-icon {
    margin-left: 10px;
    margin-right: 10px;
  }

  .item-span i {
    cursor: pointer;
  }

  .item-span i:hover {
    color: dodgerblue;
  }

  .item-add:hover {
    color: dodgerblue;
  }

  .item-add {
    cursor: pointer;
  }

  .left-input {
    width: 100%;
    background-color: bisque;
    height: 20px;
    border-width: 2px;
    border-style: inset;
    border-color: initial;
    border-image: initial;
    -webkit-rtl-ordering: logical;
    cursor: text;
    -webkit-appearance: textfield;
  }

  .plan-client-names {
    width: 100%;
    min-height: 60px;
    display: inline-flex;
    flex-direction: column;
    justify-content: flex-start;
  }

  .plan-client-item {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    width: 100%;
    margin-top: 12px;
  }

  .plan-client-item > div {
    width: 50%;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
  }

  .plan-client-item > div > div:first-child {
    width: 86px;
    /*background-color: yellow;*/
  }

  .plan-client-item > div > div:last-child {
    width: 100%;
    background-color: blue;
  }

  /*.plan-client-names :first-child {*/
  /*  padding-top: 0px;*/
  /*}*/
  .item-right .input-class {
    width: 200px;
    background-color: bisque;
  }

  .plan-item-add {

  }

  .plan-complete {
    display: inline-flex;
    flex-direction: row;
  }

  .compay-infors {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    width: 100%;
  }

  .compay-infors .infor-item {
    width: 100%;
    padding: 13px 13px 0 0;
    text-align: left;
  }

  .company-head {
    padding: 13px 13px 0 0;
    text-align: right;
    display: inline-block;
    width: 80px;
  }

  .productio-detail {
    width: 300px;
    background-color: bisque;
    height: auto;
    border: 1px solid #e4e4e4;
  }

  .detail-head {
    width: 100%;
    padding: 16px;
    text-align: left
  }

  .detail-head-item {
    width: 100%;
    min-height: 60px;
    display: inline-flex;
    flex-direction: row;
    justify-content: space-between;
  }
  .item-textarea .el-input{
    width: 100%;
  }
</style>
