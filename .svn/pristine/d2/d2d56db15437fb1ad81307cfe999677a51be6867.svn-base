<!-- 发货管理-->
<template>
  <div>
    <!--销售计划 -->
    <div style="padding: 0px;display:flex;justify-content:space-between;align-items: center">
      <div style="display: inline">
        <!-- <div class="block"> -->
        <!-- <span class="demonstration">带快捷选项</span> -->
        <el-date-picker v-model="value5" type="datetimerange" :picker-options="pickerOptions2" range-separator="至"
                        start-placeholder="开始日期" end-placeholder="结束日期" align="right">
        </el-date-picker>
        <el-button type="primary" size="mini" style="margin-left: 5px" icon="el-icon-search" @click="searchData">搜索
        </el-button>
      </div>
      <div style="margin-left: 5px;margin-right: 20px;display: inline">
        <el-button type="primary" size="mini" icon="el-icon-plus" @click="addAndFlushData">
          添加
        </el-button>
      </div>
    </div>
    <!--     添加请求-->
    <el-dialog v-dialogDrag :title="dialogTitle" style="padding: 0px;" :close-on-click-modal="false"
               :visible.sync="dialogFormVisible" @close="cancelOpt" v-if="dialogFormVisible" width="550px">
      <div style="width: 100% " v-if="dialogFormVisible">
        <el-form :model="detail" :rules="rules" ref="addForm" size="mini" label-width="90px">

          <div style="border: 1px solid #eeeeee;">
            <!-- 客户信息 -->
              <el-row>
                <el-form-item label="发货数量" prop="planNumber">
                  <el-input
                    prefix-icon="el-icon-edit"
                    type="number"
                    min="0"
                    style="width: 200px"
                    placeholder="发货数量"
                    v-model="detail.planNumber" >
                  </el-input>
                </el-form-item>
              </el-row>
            <el-row>
              <el-form-item label="收货人" prop="receiver">
                <el-input
                  prefix-icon="el-icon-edit"
                  type="text"
                  style="width: 200px"
                  placeholder="收货人"
                  v-model="detail.receiver" >
                </el-input>
              </el-form-item>
            </el-row>
            <el-row>
              <el-form-item label="联系方式" prop="relation">
                <el-input
                  prefix-icon="el-icon-edit"
                  type="text"
                  style="width: 200px"
                  placeholder="联系人电话"
                  v-model="detail.relation" >
                </el-input>
              </el-form-item>
            </el-row>
            <el-row>
              <el-form-item label="收货方式:" prop="expectLevel">
                <el-select v-model="detail.expectLevel" filterable placeholder="----请选择----" style="width: 200px;">
                  <el-option
                    v-for="item in options"
                    :key="item.value"
                    :label="item.label"
                    :value="item.value">
                  </el-option>
                </el-select>
              </el-form-item>
            </el-row>
            <el-row>
              <el-form-item label="收货地址" prop="destination">
                <el-input
                  prefix-icon="el-icon-edit"
                  type="text"
                  style="width: 200px"
                  placeholder="收货地址"
                  v-model="detail.destination" >
                </el-input>
              </el-form-item>
            </el-row>

            <el-row>
              <el-form-item label="备注" prop="note">
                <el-input
                  prefix-icon="el-icon-edit"
                  type="textarea"
                  style="width: 200px"
                  placeholder="备注"
                  v-model="detail.note" >
                </el-input>
              </el-form-item>
            </el-row>

          </div>
        </el-form>
      </div>
      <div slot="footer" class="dialog-footer">
        <el-button @click="dialogFormVisible=false">取 消</el-button>
        <el-button type="primary" @click="add('addForm')">确 定</el-button>
      </div>
    </el-dialog>
    <div v-show="showPlan">
      <el-tabs v-model="activePanel" type="card" tab-position="top" @tab-click="handleClick">
        <el-tab-pane label="销售计划" name='1'></el-tab-pane>
        <el-tab-pane label="发货请求" name='2'></el-tab-pane>
        <el-tab-pane label="发货记录" name='4'></el-tab-pane>
      </el-tabs>
      <div  v-if="manageStatus==4" class="main-plan-progress-plan flex-send">
        <div class="item-send"
             v-for="(plandetail,index) in plans"
             @mouseover="plandetail.onhover=true"
             @mouseout="plandetail.onhover=false"
             v-bind:key="plandetail.id ">
          <div class="in-send-show" :style="{backgroundColor:plandetail.bgcolor}">
            <!--               文字描述：-->
            <div>
              <div class="text-alight">客户:{{plandetail.client.name}}</div>
              <div class="text-alight">
                产品:{{plandetail.product.producteName}}
                /{{plandetail.specification.name}}
                /{{plandetail.color.name}}
              </div>
              <div class="text-alight">
                型号：{{plandetail.productNo}}
              </div>
              <div>
                <u>总数
                  :{{plandetail.quantity}}|</u>
                <u> 下发:{{plandetail.nextQuantity}}|</u>
                <u> 完成:{{plandetail.endQuantity}}/枚| </u>
                <u>未下发：{{plandetail.quantity-plandetail.nextQuantity}}</u>
              </div>
              <div>{{plandetail.planString}}</div>
              <div class="text-alight">
                备注：{{plandetail.notes}}
              </div>
            </div>
            <div>
            <el-button
              type="primary"
              @click="deliveryRequest(plandetail)"
              style="padding:4px;margin: 4px"
              size="mini">发货请求
            </el-button>
              <el-button
                type="danger"
                @click="completeSend(plandetail)"
                style="padding:4px;margin: 4px"
                size="mini">结束请求
              </el-button>
            </div>
          </div>
        </div>
      </div>

      <div v-if="plans.length==0">
        暂无数据
      </div>
    </div>
    <div style="display: flex;justify-content: flex-end;margin: 2px">
      <el-pagination background :page-size="10" :pager-count="11" :current-page="currentPage"
                     @current-change="currentChange" layout="prev, pager, next" :total="totalCount">
      </el-pagination>
    </div>
  </div>


</template>
<script>
  import {
    Message
  } from 'element-ui'

  export default {
    data() {
      return {
        //验证
        rules:{
          planNumber: [{required: true, message: '必填:数量', trigger: 'blur'}]
        },
        //**********
        options: [{
          value: '自提',
          label: '自提'
        }, {
          value: '送货上门',
          label: '送货上门'
        }, {
          value: '其他(备注)',
          label: '其他(备注)'
        }],
        selectedStep: {},
        // 月份使用？
        pickerOptions2: {
          shortcuts: [{
            text: '最近一周',
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);
              picker.$emit('pick', [start, end]);
            }
          }, {
            text: '最近一个月',
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);
              picker.$emit('pick', [start, end]);
            }
          }, {
            text: '最近三个月',
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);
              picker.$emit('pick', [start, end]);
            }
          }]
        },
        value4: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],
        value5: '',
        //***********************************________*******************************
        keywords: '',
        tableLoading: false,
        advanceSearchViewVisible: false,
        types: 2,
        midProduct: [],
        plans: [],
        clients: [],
        units: [],
        dialogTitle: '',
        currentPage: 1,
        currentDetailPage: 1,
        totalDatailPage: -1,
        totalCount: -1,
        // 原材料
        currentMaterialPage: 1,
        detail: {
          id: 0,
          planNumber: '',//发货亲求数量
          destination:'',//发货地址
          receiveWay:'',//收货方式
          receiver:'',//联系人
          relation:'',//联系人电话
          note:'',//备注
        },

        dialogFormVisible: false,
        dialogMaterialVisible: false,
        dialogMaterialTitle: '请选择产品',
        activePanel: '1',
        manageStatus: '4',
        showPlan: true,
        detailPage: 1,
        CurrentSalesId: '',//选中  发起发货请求的销售计划的Id;
      }
    },
    mounted: function () {
      this.initData();
    },


    methods: {
      /**
       * 发货请求
       * @param index
       * @param row
       */
      deliveryRequest(row) {
        this.dialogTitle = "发货请求";
        let that = this;
        this.CurrentSalesId=row.id;
        that.dialogFormVisible = true;
      },
      handleClick() {
        console.log(this.activePanel);
        switch (this.activePanel) {
          case "1":
            this.manageStatus = "4";
            break;
          case "2":
            this.manageStatus = "1";
            break;
          case "4":
            this.manageStatus = "2";
            break;
          case "7":
            this.manageStatus = "3";
            break;
          default:
            break;
        }
        this.loadData();
      },      //撤销销售计划


      formatStatus: function (row, column) {
        return row.materialType == 1 ? '已确认' : '未确认';
      },
      //materials: [["手套", 1, 38]]

      initData() {
        let _this = this;
        _this.loadData();

      },
      keywordsChange(val) {
        if (val === '') {
          this.loadData();
        }
      },
      keywordsMaterialChange(val) {
        if (val === '') {
          this.loadMaterial();
        }
      },
      handleNodeClick(data) {
        let that = this;
        that.tableLoading = true;
        this.crrentSelectShop = data;
        this.detail.clientId = data.id;
        this.detail.clientName = data.name;
        this.detail.abbrName = data.abbreviation;
        this.showOrHidePop = false;
        this.depTextColor = '#606266';

      },
      showCurrentNo() {
        if (this.isprarent) {
          this.isprarent = false;
        } else {
          this.isprarent = true;
        }
      },


      currentChange(currentChange) {
        this.currentPage = currentChange;
        console.log(this.currentPage);
        this.loadData();
      },
      
      addAndFlushData() {
        this.dialogTitle = "发货请求";
        let that = this;
        that.dialogFormVisible = true;

      },
      searchData() {
        this.loadData();
      },
      add(addForm) {
        this.dialogFormVisible = true;
        let _this = this;
        let detail = _.cloneDeep(this.detail);
         let please={

           shippingRequestDetails:detail
         };
        this.$refs[addForm].validate((valid) => {
          if (valid) {
            if (_this.detail.id) {
              //更新
              this.tableLoading = true;
              console.log(_this.plan);
              this.postRequest("/shippingrequestdetails/update", please).then(resp => {
                _this.tableLoading = false;
                if (resp && resp.status === 200) {
                  // let data = resp.data;
                  _this.dialogFormVisible = false;
                  _this.loadData();
                  _this.emptyData();
                }
              })
            } else {
              //添加
              this.tableLoading = true;
              this.postRequest("/shippingrequestdetails/add?salesPlanId="+this.CurrentSalesId, detail).then(resp => {
                _this.tableLoading = false;
                if (resp && resp.status === 200&&resp.data.success) {
                  _this.dialogFormVisible = false;
                  _this.loadData();
                  _this.emptyData();
                }else{
                  Message("添加失败")
                }
              })
            }
          } else {
            return false;
          }
        });
      },
      cancelOpt() {
        this.dialogFormVisible = false;
        this.loadData();
        this.emptyData();
      },

      deleteData(row) {
        this.$confirm('此操作将删除该纪录, 是否继续?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          this.doDelete(row.id);
        }).catch(() => {
        });
      },
      doDelete(ids) {
        this.tableLoading = true;
        let _this = this;
        this.getRequest("/sales/delete?id=" + ids).then(resp => {
          _this.tableLoading = false;
          if (resp && resp.status === 200&&resp.data.success) {
            _this.loadData();
          }else{
            _this.$message({type:''})
          }
        })
      },
      loadData() {
        let _this = this;
        this.tableLoading = true;
        this.getRequest("/sales/findbystatus?page=" + this.currentPage + "&size=10&status=" + this.manageStatus)
          .then(
            resp => {
              this.tableLoading = false;
              if (resp && resp.status === 200 && resp.data.success) {
                _this.plans = _this.preDataSale(resp.data.data);
                console.log(_this.plans);
                _this.totalCount = resp.data.total;
                _this.emptyData();
              }
            })
      },
      emptyData() {
        this.CurrentSalesId = "";
        this.detail = {
          id: 0,
          planNumber: '',//发货亲求数量
          destination:'',//发货地址
          receiveWay:'',//收货方式
          receiver:'',//联系人
          relation:'',//联系人电话
          note:'',//备注e
        };
      },
      back() {
        if (this.showDetaillist) {
          this.showDetaillist = false;
          this.showPlan = true;
        } else {
          this.showDetaillist = true;
          this.showPlan = false;
        }

      },
      preDataSale(data) {
        if (data.length) {
          for (let i = data.length - 1; i >= 0; i--) {
            let e = data[i];
            let color = e.status + '';
            switch (color) {
              case '1':
                e.bgcolor = "#eeeeee";
                break;
              case '2':
                e.bgcolor = "yellowgreen";
                break;
              case '3':
                e.bgcolor = "green";
                break;
              case '4':
                e.bgcolor = "#e4e4e4";
                break;
              case '5':
                e.bgcolor = "#2974df";
                break;
              case '6':
                e.bgcolor = "#85ce61";
                break;
              default:
                break;
            }

          }
        }
        return data;
      },
      toTree(data) {
        let result = []
        if (!Array.isArray(data)) {
          return result
        }
        data.forEach(item => {
          delete item.child;
        });
        let map = {};
        data.forEach(item => {
          map[item.id] = item;
        });
        data.forEach(item => {
          let parent = map[item.parentClientId];
          if (parent) {
            (parent.child || (parent.child = [])).push(item);
          } else {
            result.push(item);
          }
        });
        console.log(result);
        return result;
      }
    },
    computed: {
    },


  }

</script>
<style>

  .demo-table-expand label {
    width: 50px;
    color: #2974df;
  }

  .flex-send {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: start;
  }
  .flex-send .item-send {
    display: block;
    box-sizing: border-box;
    height: 264px;
    width: 20%;
    overflow: hidden;
    /*margin-left: -4px;*/
    /*margin-top: -4px;*/
    /*line-height: 100px;*/
    text-align: center;
    list-style: none;
    padding: 5px;
    position: relative;
    justify-content: stretch;

  }
  .in-send-show:hover {
    border-color: red;
    position: relative;
  }
  .in-send-show {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    margin-left: 6px;
    margin-bottom: 5px;
    border: 1px solid #ccc;
    text-align: start;
    height: inherit;
    overflow-y: hidden;
    overflow: auto;
  }


</style>
