<!--合同管理-->
<template>
  <div>
    <div style="padding: 0px;display:flex;justify-content:space-between;align-items: center">
      <div style="display: inline">
        <el-date-picker v-model="value5" type="datetimerange" :picker-options="pickerOptions2" range-separator="至"
                        start-placeholder="开始日期" end-placeholder="结束日期" align="right">
        </el-date-picker>
        <el-button type="primary" size="mini" style="margin-left: 5px" icon="el-icon-search" @click="searchData">搜索
        </el-button>
      </div>
      <div style="margin-left: 5px;margin-right: 20px;display: inline">
        <el-button type="primary" size="mini" icon="el-icon-plus" @click="Contact">新建合同</el-button>
        <el-button type="primary" size="mini" icon="el-icon-plus" @click="newSalePlan">创建销售计划</el-button>
      </div>
    </div>
    <!--新销售计划-->
    <el-dialog v-dialogDrag :title="dialogTitle" style="padding: 0px;" :close-on-click-modal="false"
               :visible.sync="dialogFormVisible" @close="cancelSales" v-if="dialogFormVisible" width="750px">
      <div style="width: 100% " v-if="dialogFormVisible">
        <el-form :model="salse" ref="addSaleForm" size="mini" label-width="90px">
          <div style="border: 1px solid #eeeeee;">
            <!-- 客户信息 -->
            <div style="background-color:bisque">
              <div style="text-align: left;">
                客户信息
              </div>
              <el-row>
                <el-col :span='11'>
                  <el-form-item label="客户:" prop="clientId">
                    <el-cascader
                      placeholder="--选择客户--"
                      :options="clients"
                      :props="defaultProps"
                      filterable
                      :show-all-levels="false"
                      v-model="salse.clientId"
                      change-on-select
                      @change="currentSelectShop"
                    ></el-cascader>
                  </el-form-item>
                </el-col>
                <el-col :span="12">
                  <el-form-item label="订单等级:" prop="expectLevel">
                    <el-select v-model="salse.expectLevel" filterable placeholder="请选择" style="width: 200px;">
                      <el-option
                        v-for="item in options"
                        :key="item.value"
                        :label="item.label"
                        :value="item.value">
                      </el-option>
                    </el-select>
                  </el-form-item>
                </el-col>
              </el-row>
            </div>
            <!-- 产品信息 -->
            <div style="background-color: rgb(175, 218, 136)">
              <div style="text-align: left;">
                产品信息
              </div>
              <el-row>
                <el-col :span='11'>
                  <el-form-item label="名称:" prop="productName">
                    <el-input prefix-icon="el-icon-edit" v-model="salse.productName" size="mini" style="width: 200px"
                              @focus='showMaterial' placeholder="产品名称。。。"></el-input>
                  </el-form-item>
                </el-col>
                <el-col :span='11'>
                  <el-form-item label="型号:" prop="productNo">
                    <el-input prefix-icon="el-icon-edit" v-model="salse.productNo" size="mini" style="width: 200px"
                              placeholder="型号"></el-input>
                  </el-form-item>
                </el-col>
                <el-col :span='11'>
                  <el-form-item label="标记:" prop="mark">
                    <el-input prefix-icon="el-icon-edit" v-model="salse.mark" size="mini" style="width: 200px"
                              placeholder="标记"></el-input>
                  </el-form-item>
                </el-col>
              </el-row>
              <el-row>
                <el-col :span='11'>
                  <el-form-item label="规格:" prop="specsId">
                    <el-select v-model="salse.specsId" style="width: 200px" size="mini" placeholder="请选择规格">
                      <el-option
                        v-for="item in specslist"
                        :key="item.id"
                        :label="item.name"
                        :value="item.id">
                      </el-option>
                    </el-select>
                  </el-form-item>
                </el-col>
                <el-col :span='11'>
                  <el-form-item label="颜色:" prop="colorId">
                    <el-select v-model="salse.colorId" style="width: 200px" size="mini" placeholder="--请选择色彩--">
                      <el-option
                        v-for="item in colorlist"
                        :key="item.id"
                        :label="item.name"
                        :value="item.id">
                      </el-option>
                    </el-select>
                  </el-form-item>
                </el-col>

              </el-row>
              <el-row>
                <el-col :span='11'>
                  <el-form-item label="数量:" prop="quantity">
                    <el-input type='number' placeholder="原料数量" size="mini" prefix-icon="el-icon-edit"
                              v-model="salse.quantity" style="width: 200px;background: #fff;">
                    </el-input>
                  </el-form-item>
                </el-col>
                <el-col :span='11'>
                  <el-form-item label="备注:" prop="notes">
                    <el-input prefix-icon="el-icon-edit" v-model="salse.notes" size="mini" style="width: 200px"
                              placeholder="备注。。。"></el-input>
                  </el-form-item>
                </el-col>
              </el-row>

              <div>
              </div>
            </div>
          </div>
        </el-form>
      </div>
      <div slot="footer" class="dialog-footer">
        <el-button @click="dialogFormVisible=false">取 消</el-button>
        <el-button type="primary" @click="addSales('addSaleForm')">确 定</el-button>
      </div>
    </el-dialog>

  </div>
</template>
<script>
  import {Message} from 'element-ui';

  export default {
    data() {
      return {
        //销售计划
        totalCount: -1,
        currentPage: 1,
        tableLoading: false,
        manageStatus: '1',
        defaultProps: {
          value: 'id',
          label: 'name',
          children: 'child'
        },
        products: [],
        clients: [],
        options: [{
          value: '紧急',
          label: '紧急'
        }, {
          value: '加急',
          label: '加急'
        }, {
          value: '备货',
          label: '备货'
        }, {
          value: '正常',
          label: '正常'
        }, {
          value: '特殊',
          label: '特殊'
        }],
        colorlist: [],
        specslist: [],
        dialogFormVisible: false,
        salse: {
          id: 0,
          clientId: '',
          clientName: '',
          quantity: '',
          note: '',
          expectLevel: '',//订单等级
          productName: '',
          proId: '', //产品Id
          specification: "", //规格
          mark: '', //标记
          productNo: '', //型号
          specsId: "",//规格Id
          colorId: '',
          progressId: 0,//工序Id;
        },

      }
    },
    mounted: function () {
      this.initData();
    },
    methods: {
      //新建合同
      Contact() {

      },

      currentSelectShop(e) {
        console.log(e);
        // let arr=e||[];
        // this.detail.clientId=arr.pop();
      },
      //**.....
      //新建销售计划
      newSalePlan() {
        this.dialogTitle = "郑铁公司销售单";
        let that = this;
        that.dialogFormVisible = true;
      },
      addSales(addSaleForm) {
        this.dialogFormVisible = true;
        let _this = this;
        let plans = _.cloneDeep(this.detail);
        plans.pcCode = plans.clientId.join(",");
        plans.clientId = plans.clientId.pop();
        delete plans.product;
        delete plans.client;
        delete plans.color;
        delete plans.editer;
        delete plans.specification;
        this.$refs[addEmpForm].validate((valid) => {
          if (valid) {
            if (_this.detail.id) {
              //更新
              this.tableLoading = true;
              console.log(_this.plan);
              this.postRequest("/sales/update", plans).then(resp => {
                _this.tableLoading = false;
                if (resp && resp.status === 200) {
                  // let data = resp.data;
                  _this.dialogFormVisible = false;
                  _this.loadmyData();
                  _this.emptyData();
                }
              })
            } else {
              //添加
              this.tableLoading = true;
              if (this.plan.clientId === 0 || this.plan.clientId == '') {
                this.plan.clientId = 0;
              }
              console.log(plans);
              this.postRequest("/sales/add", plans).then(resp => {
                _this.tableLoading = false;
                if (resp && resp.status === 200 && resp.data.success) {
                  _this.dialogFormVisible = false;
                  _this.loadmyData();
                  _this.emptyData();
                }
              })
            }
          } else {
            return false;
          }
        });

      },
      cancelSales() {
        this.dialogFormVisible = false;
        this.loadmyData();
        this.emptyData();
      },
      emptyData() {
        this.colorlist = [];
        this.specslist = [];
        this.salse = {
          id: 0,
          clientId: '',
          clientName: '',
          quantity: '',
          note: '',
          productName: '',
          proId: '', //产品Id
          specification: "", //规格
          mark: '', //标记
          productNo: '', //型号
          specsId: '',//规格Id
          colorId: '',
          progressId: 0,//工序Id;
        };

      },

      initData() {
        let _this = this;
        this.loadmyData();
        this.getRequest("/productionplan/basedata").then(resp => {
          if (resp && resp.status === 200) {
            let data = resp.data;
            _this.clients = _this.toTree(data.root.clients)
            let pro = [];
            let p = data.root.products;
            p.forEach(function (v, i, arr) {
              pro.push({
                id: v[0],
                producteName: v[1],
                specification: v[2],
                proType: v[3],
                mark: v[4],
                color: v[5],
              })
            });
            _this.products = pro;
          }
        })
      }
    },
    loadmyData() {
      let _this = this;
      this.tableLoading = true;
      this.getRequest("/sales/findbystatus?page="
        + this.currentPage
        + "&size=10&status="
        + this.manageStatus).then(resp => {
        this.tableLoading = false;
        if (resp && resp.status === 200 && resp.data.success) {
          _this.plans = resp.data.data;
          console.log(_this.plans);

          _this.totalCount = resp.data.total;
          _this.emptyData();
        }
      })
    },
    toTree(data) {
      let result = [];
      if (!Array.isArray(data)) {
        return result
      }
      data.forEach(item => {
        delete item.child;
      });
      let map = {};
      data.forEach(item => {
        map[item.id] = item;
      });
      data.forEach(item => {
        let parent = map[item.parentClientId];
        if (parent) {
          (parent.child || (parent.child = [])).push(item);
        } else {
          result.push(item);
        }
      });
      console.log(result);
      return result;
    }

  }

</script>
<style>

</style>
