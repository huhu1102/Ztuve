<!-- 生产管理 -->
<template>
  <div>
    <div style="padding: 0px;display:flex;justify-content:space-between;align-items: center">
      <div style="display: inline">
        <el-date-picker v-model="value5" type="datetimerange" :picker-options="pickerOptions2" range-separator="至"
                        start-placeholder="开始日期" end-placeholder="结束日期" align="right">
        </el-date-picker>
        <el-button type="primary" size="mini" style="margin-left: 5px" icon="el-icon-search" @click="searchData">搜索
        </el-button>
      </div>
      <div style="margin-left: 5px;margin-right: 20px;display: inline">
        <el-button type="primary" size="mini" icon="el-icon-plus" @click="addAndFlushData">
          添加生产进度
        </el-button>
      </div>
    </div>
    <!-- 生产计划 -->
    <el-dialog v-dialogDrag :title="dialogPlanTitle" style="padding: 0px;" :close-on-click-modal="false"
               :visible.sync="dialogFormVisible" @close="cancelPlanOpt" width="750px">
      <div style="width: 100% " v-if="dialogFormVisible">
        <div style="width: 100% " v-if="dialogFormVisible">
          <el-form :model="plan" :rules="rules" ref="addPlanForm" size="mini" label-width="90px">
            <div style="border: 1px solid #eeeeee;">
              <!-- 详情信息 -->
              <div>
                <div style="background-color: bisque">
                  <form :model="detail" size="mini" label-width="50px">
                    <el-row style="display:flex;justify-content: flex-end;">
                      <el-button type="primary" style="padding: 8px; margin:0;" @click="showMaterial">
                        选择生产计划
                      </el-button>
                    </el-row>
                    <!-- 选择的生产计划详情 -->
                    <el-row>
                      <el-table ref="singleTable" fit height=150 :data="selectPlans" highlight-current-row
                                style="width: 100%;background: bisque;">
                        <el-table-column align="left" label="产品名称">
                          <template slot-scope="scope">{{ scope.row.salesPlan.product.producteName}}</template>
                        </el-table-column>
                        <el-table-column align="left" label="数量">
                          <template slot-scope="scope">{{ scope.row.actualQuantity}}枚</template>
                        </el-table-column>
                        <el-table-column align="left" label="规格">
                          <template slot-scope="scope">{{ scope.row.salesPlan.specification.name}}</template>
                        </el-table-column>
                        <el-table-column align="left" label="型号">
                          <template slot-scope="scope">{{ scope.row.salesPlan.product.proType}}</template>
                        </el-table-column>
                        <el-table-column prop="name" align="left" label="编码规则">
                          <template slot-scope="scope">
                            <el-popover trigger="hover" placement="top">
                              <div v-for="(serial,index) in  scope.row.serialNumbers">
                                <p>编号: {{ serial.startNo}}- {{ serial.endNo}} ;备注: {{ serial.note}} </p>
                              </div>
                              <div slot="reference" class="name-wrapper">
                                <el-tag size="medium">编码</el-tag>
                              </div>
                            </el-popover>
                          </template>
                        </el-table-column>
                      </el-table>
                    </el-row>
                    <el-row>
                      <el-col :span='24'>
                        <el-input prefix-icon="el-icon-edit" v-model="detail.notes" size="mini" style="width:100%;"
                                  type='textarea' placeholder="备注信息。。。"></el-input>
                      </el-col>
                    </el-row>
                  </form>
                  <!-- 编号信息 -->
                </div>
              </div>
            </div>
          </el-form>
        </div>
      </div>
      <div slot="footer" class="dialog-footer">
        <el-button @click="dialogFormVisible=false">取 消</el-button>
        <el-button type="primary" @click="addManager('addPlanForm')">确 定</el-button>
      </div>
    </el-dialog>
    <!--     添加生产进度-->
    <el-dialog v-dialogDrag :title="dialogProgressTitle" style="padding: 0px;" :close-on-click-modal="false"
               :visible.sync="dialogProgressVisible" @close="cancelsetpOpt" width="750px">
      <div style="width: 100% " v-if="dialogProgressVisible">
        <div style="width: 100% " v-if="dialogProgressVisible">

          <div style="display: flex;justify-content: flex-start;">
            <el-steps :active="index" direction="vertical" :space="50">
              <el-step title="注塑" size="mini"></el-step>
              <el-step title="去毛刺"></el-step>
              <el-step title="打字"></el-step>
              <el-step title="检验"></el-step>
              <el-step title="装箱"></el-step>
            </el-steps>
            <div class="step-detail">
              <div>
                车间：
                <el-input
                  placeholder="请输入车间名..."
                  size="mini"
                  style="width: 200px"
                  @keyup.enter.native="next"
                  v-model="stepRecord.plant">
                </el-input>
              </div>
              <div class="detail">
                数量：
                <el-input
                  placeholder="生产合格数量..."
                  size="mini"
                  style="width: 200px"
                  type="number"
                  @keyup.enter.native="next"
                  v-model="stepRecord.qualifiedNo">
                </el-input>
              </div>
              <div class="detail">
                报废：
                <el-input
                  placeholder="生产报废数量..."
                  size="mini"
                  style="width: 200px"
                  type="number"
                  @keyup.enter.native="next"
                  v-model="stepRecord.junkedNo">
                </el-input>
              </div>
              <div class="detail">
                备注：
                <el-input
                  placeholder="备注..."
                  size="mini"
                  style="width: 200px"
                  type="textarea"
                  @keyup.enter.native="next"
                  v-model="stepRecord.notes">
                </el-input>
              </div>

            </div>
          </div>
          <div style="display: flex;align-items: center;justify-content: center;padding: 0px;margin: 0px;">
            <el-button round size="mini" v-if="index!=0">上一步</el-button>
            <!--            @click="index&#45;&#45;"-->
            <el-button type="primary" round size="mini" v-text="index==7?'完成':'下一步'"></el-button>
            <!--            @click="next"-->
          </div>
        </div>
      </div>
      <div slot="footer" class="dialog-footer">
        <el-button @click="dialogProgressVisible=false">取 消</el-button>
        <el-button type="primary" @click="addSteps('addStep')">确 定</el-button>
      </div>
    </el-dialog>

    <el-dialog v-dialogDrag :title="dialogMaterialTitle" style="padding: 0px;" :close-on-click-modal="false"
               :visible.sync="dialogMaterialVisible" @close="cancelchoose" width="900px">
      <div style="width: 100% " v-if="dialogMaterialVisible">
        <div style="padding: 0px;display:flex;justify-content:space-between;align-items: center">
          <!-- 生产计划详情的搜错   -->
          <div style="display: inline">
            <el-input placeholder="通过名称搜索,记得回车哦..." clearable @change="keywordsMaterialChange"
                      style="width: 300px;margin: 0px;padding: 0px;" size="mini"
                      @keyup.enter.native="searchMaterialData"
                      prefix-icon="el-icon-search" v-model="keyMaterialwords">
            </el-input>
            <el-button type="primary" size="mini" style="margin-left: 5px" icon="el-icon-search"
                       @click="searchMaterialData">搜索
            </el-button>
          </div>
        </div>
        <!-- 数据源 -->
        <el-table :data="materialList" fit border style="width: 100%" @row-click="showRow">
          <el-table-column align="center" fixed label="当前">
            <template slot-scope="scope">
              <el-radio :label="scope.$index" v-model='selectedM'>&nbsp;</el-radio>
            </template>
          </el-table-column>
          <el-table-column align="left" label="客户名">
            <template slot-scope="scope">{{ scope.row.salesPlan.client.name}}</template>
          </el-table-column>
          <el-table-column align="left" label="产品名称">
            <template slot-scope="scope">{{ scope.row.salesPlan.product.producteName}}</template>
          </el-table-column>
          <el-table-column align="left" label="数量">
            <template slot-scope="scope">{{ scope.row.actualQuantity}}枚</template>
          </el-table-column>
          <el-table-column align="left" label="规格">
            <template slot-scope="scope">{{ scope.row.salesPlan.specification.name}}</template>
          </el-table-column>
          <el-table-column align="left" label="型号">
            <template slot-scope="scope">{{ scope.row.salesPlan.product.proType}}</template>
          </el-table-column>
          <el-table-column align="left" label="下单时间">
            <template slot-scope="scope">{{ scope.row.createDate|formatDateTime}}</template>
          </el-table-column>

          <el-table-column prop="name" align="left" label="编码规则">
            <template slot-scope="scope">
              <el-popover trigger="hover" placement="top">
                <div v-for="(serial,index) in  scope.row.serialNumbers">
                  <p>编号: {{ serial.startNo}}- {{ serial.endNo}} ;备注: {{ serial.note}} </p>
                </div>
                <div slot="reference" class="name-wrapper">
                  <el-tag size="medium">编码</el-tag>
                </div>
              </el-popover>
            </template>
          </el-table-column>
        </el-table>
        <div style="display: flex;justify-content: flex-end;margin: 2px">
          <el-pagination background :page-size="10" :pager-count="11" :current-page="currentMaterialPage"
                         @current-change="currentMaterialChange" layout="prev, pager, next" :total="totalMaterialCount">
          </el-pagination>
        </div>
      </div>
      <div slot="footer" class="dialog-footer">
        <el-button @click="dialogMaterialVisible=false">取 消</el-button>
        <el-button type="primary" @click="chooseMaterial()">确 定</el-button>
      </div>
    </el-dialog>
    <!-- <div style="display: flex;;margin: 2px"> -->


    <el-table :data="plans" fit border highlight-current-row>
      <el-table-column type="expand">
        <template slot-scope="props">
          <el-form label-position="left" inline class="demo-table-expand">
            <el-steps align-center>
              <el-step title="步骤2" description="检验"></el-step>
              <el-step title="步骤3" description="打字"></el-step>
              <el-step title="步骤4" description="检验"></el-step>
            </el-steps>
          </el-form>
        </template>
      </el-table-column>
      <el-table-column align="left" label="序号" width="80">
        <template slot-scope="scope">{{ scope.$index+1}}</template>
      </el-table-column>
      <el-table-column align="left" label="客户名称" width="140">
        <template slot-scope="scope">{{ scope.row.planDetails.salesPlan.client.name}}</template>
      </el-table-column>
      <el-table-column align="left" label="产品名称" width="140">
        <template slot-scope="scope">{{ scope.row.planDetails.salesPlan.product.producteName}}</template>
      </el-table-column>
      <el-table-column align="left" label="规格" width="120">
        <template slot-scope="scope">{{ scope.row.planDetails.salesPlan.specification.name}}</template>
      </el-table-column>
      <el-table-column align="left" label="生产数量" width="100">
        <template slot-scope="scope">{{ scope.row.planDetails.actualQuantity}}枚</template>
      </el-table-column>
      <el-table-column align="left" label="状态" width="100">
        <template slot-scope="scope">{{ scope.row.mangeStatus}}</template>
      </el-table-column>
      <el-table-column prop="name" align="left" label="编码规则" width="100">
        <template slot-scope="scope">
          <el-popover trigger="hover" placement="top">
            <div v-for="(serial,index) in  scope.row.planDetails.serialNumbers">
              <p>编号: {{ serial.startNo}}- {{ serial.endNo}} ;备注: {{ serial.note}} </p>
            </div>
            <div slot="reference" class="name-wrapper">
              <el-tag size="medium">编码</el-tag>
            </div>
          </el-popover>
        </template>
      </el-table-column>
      <el-table-column align="left" label="操作" width="400">
        <template slot-scope="scope">
          <el-button @click="editeDetail(scope.$index,scope.row)" style="padding: 3px 4px 3px 4px;margin: 2px"
                     size="mini">编辑
          </el-button>
          <el-button type="danger" style="padding: 3px 4px 3px 4px;margin: 2px" size="mini"
                     @click="deleteDetail(scope.$index,scope.row)">删除
          </el-button>
          <el-button type="success" style="padding: 3px 4px 3px 4px;margin: 2px" size="mini"
                     @click="confirm(scope.$index,scope.row)">确认生产
          </el-button>
          <el-button type="success" style="padding: 3px 4px 3px 4px;margin: 2px" size="mini"
                     @click="addRecord(scope.$index,scope.row)">添加生产记录
          </el-button>
        </template>
      </el-table-column>
    </el-table>
    <div style="display: flex;justify-content: flex-end;margin: 2px">
      <el-pagination background :page-size="10" :pager-count="11" :current-page="currentPage"
                     @current-change="currentChange" layout="prev, pager, next" :total="totalCount">
      </el-pagination>
    </div>
  </div>

</template>
<script>
  import {
    Message
  } from 'element-ui'

  export default {
    data() {
      return {
        stepRecord: {
          plant: '',
          qualifiedNo: '',//生产数量
          junkedNo: '',//报废数
          unitsId: '',//单位
          notes: '',//备注
        },
        lastPlanDetail: {
          startNo: 'J00000001',
          endNo: "J00000100"
        },
        lastPlanproductionPlanDetails: [{
          startNo: 'J00000001',
          endNo: "J00000100"
        }, {
          startNo: 'K00000001',
          endNo: "K00000100"
        }],
        // 月份使用？
        pickerOptions2: {
          shortcuts: [{
            text: '最近一周',
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);
              picker.$emit('pick', [start, end]);
            }
          }, {
            text: '最近一个月',
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);
              picker.$emit('pick', [start, end]);
            }
          }, {
            text: '最近三个月',
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);
              picker.$emit('pick', [start, end]);
            }
          }]
        },
        value4: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],
        value5: '',
        //***********************************________*******************************
        keywords: '',
        tableLoading: false,
        advanceSearchViewVisible: false,
        rules: {
          // note: [{required: true, message: '必填:备注', trigger: 'blur'}],
        },
        types: 2,
        midProduct: [],
        plans: [],
        clients: [],
        units: [],
        selectPlans: [],
        dialogTitle: '',
        currentPage: 1,
        totalCount: -1,
        // 原材料
        totalMaterialCount: -1,
        keyMaterialwords: '',
        currentMaterialPage: 1,
        plan: {
          note: '', //整单备注
          planDetailsId: '', //整单编号
        },
        detail: {
          id: 0,
          actualQuantity: '',
          salesPlanId: '',
          notes: '',
          salesPlan: {}, //销售计划
          serialNumbers: [],
          type: 'new',
          status: 3,
          productNo: '',
          specifications: '',
          productionPlanId: 0,
        },
        serialNumbers: [],
        serialNumber: {
          sid: 1,
          id: 0,
          startNo: '',
          endNo: '',
          note: '',
          clientId: 0,
          productId: 0,
          type: "new"
        },
        productionPlanDetails: [],
        dialogFormVisible: false,
        currentRowData: {}, //当前选中行数据
        currentIndex: '', //当前选中行号
        depTextColor: '',
        showOrHidePop: false,
        showHidePop: false,
        defaultProps: {
          label: 'name',
          isLeaf: 'leaf',
          children: 'child'
        },
        maxSid: 0,
        currentDeleteData: [],
        materials: [],
        materialList: [],
        products: [],
        dialogMaterialVisible: false,
        dialogMaterialTitle: '请选择销售计划',
        selectSalePlan: {}, //当前选择的原料
        selectedM: {},
        filterText: '',
        lastPlanDetail: '', //最后一次计划详情;
        crrentSelectShop: {}, //当前选中的公司；
        isCurrentShop: true,
        isprarent: false,
        sugestParentstartNo: '', //..公司
        sugestParentEndNo: '', //公司结束编号
        sugestSelfEndNumbers: '',
        sugestSelfNumbers: '', //仅子公司
        currentParentShop: {},
        currentShop: {},
        lastPlanDetail: {
          startNo: '',
          endNo: '',
        },
        serialNuberDeleted: [], //删除编号集合
        serialNuberUpdate: [], //更新编号集合
        serialNuberList: [], //编号集合
        planDetails: [],

        dialogPlanVisible: false,
        dialogPlanTitle: '生产计划',
        currntPlanRow: {},
        codeLen: 1,
        dialogProgressVisible: false,
        dialogProgressTitle: '',
      }
    },
    mounted: function () {
      this.initData();
    },
    addSteps() {


    },
    methods: {
      cancelsetpOpt() {

      },

      confirm(index, row) {

      },
      addRecord(index, row) {
        this.dialogProgressTitle = "添加生产记录";
        this.dialogProgressVisible = true;

      },
      //编码长度设置
      codeLenSet(e) {
        console.log(e);
        this.codeLen = e;
      },
      // 生产计划撤销
      cancelPlanOpt() {
        this.dialogFormVisible = false;
        this.plan = {
          notes: '', //整单备注
          planDetailsId: 0, //整单编号

        };
        this.loadData();
      },

      //生产计划新增\修改
      addManager(addPlanForm) {
        var _this = this;
        if (this.plan.productionPlanId == 0) {
          this.$message({
            type: 'infor',
            message: '请选择生产计划!!'
          })
          return false;
        }
        this.$refs[addPlanForm].validate((valid) => {
          if (valid) {
            // this.plan.buyedDate=new Date(this.plan.buyedDate);
            if (_this.plan.id) {
              //更新
              _this.tableLoading = true;
              console.log(_this.plan);
              _this.postRequest("/productmanage/update", _this.plan).then(resp => {
                _this.tableLoading = false;
                if (resp && resp.status == 200) {
                  _this.dialogFormVisible = false;
                  _this.loadData();
                  _this.emptyData();
                  _this.emptyDetail();
                  _this.clearSerialNumbers();
                }
              })
            } else {
              //添加
              _this.tableLoading = true;
              console.log(_this.plan);
              _this.postRequest("/productmanage/add", _this.plan).then(resp => {
                _this.tableLoading = false;
                if (resp && resp.status == 200) {
                  var data = resp.data;
                  _this.dialogFormVisible = false;
                  _this.loadData();
                  _this.emptyData();
                  _this.emptyDetail();
                  _this.clearSerialNumbers();
                }
              })
            }
          } else {
            return false;
          }
        });

      },

      // 编号***********
      serialNumberAdd() {
        var sid = 0;
        if (this.serialNumbers.length) {
          var maxId = 0;
          //找出最大的Id+1
          this.serialNumbers.forEach(function (v, i, arr) {
            maxId = v.sid > maxId ? v.sid : maxId;
          })
          sid = maxId + 1;
        } else {
          sid = 1;
        }
        this.serialNumbers.push({
          sid: sid,
          id: 0,
          startNo: '',
          endNo: '',
          clientId: 0,
          productId: 0,
          type: "new"
        });
      },
      deletSerialNo(index) {
        var deletData = this.serialNumbers.splice(index, 1);
        var conditions = deletData[0].endNo == '' ||
          deletData[0].startNo == '' ||
          deletData[0].type == 'new';
        if (!conditions) {
          deletData[0].type = 'delete';
          this.serialNuberDeleted.push(deletData[0])
        }
        console.log(deletData);
      },
      // 编号***********
      filterNode(value, data) {
        if (!value) return true;
        return data.label.indexOf(value) !== -1;
      },
      showRow(row) {
        this.selectedM = this.materialList.indexOf(row);
        this.selectSalePlan = row;
        console.log(this.selectSalePlan);
      },
      showMaterial() {
        this.loadMaterial();

      },
      chooseMaterial() {
        console.log('选择原料了！')
        // this.selectSalePlan
        let vm = this;

        if (this.selectSalePlan.id > 0) {
          const msg = this.selectSalePlan.salesPlan.client.name + "，     产品：" + this.selectSalePlan.salesPlan.product
            .producteName + ";"
          this.$confirm('您当前选择 ：客户' + msg + " 确认选择该销售计划吗？", '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning'
          }).then(() => {
            vm.setDetailData(vm);
          }).catch(() => {
            this.$message({
              type: 'info',
              message: '已取消'
            });
          });
        } else {
          this.$message({
            type: 'info',
            message: '请选择原材料！'
          })
        }

      },
      setDetailData() {
        let that = this;
        var v = that.selectSalePlan;
        console.log(v + "=*-*=");

        that.selectPlans.splice(0, 1, that.selectSalePlan);
        that.plan.planDetailsId = that.selectSalePlan.id;
        this.dialogMaterialVisible = false;
      },
      cancelchoose: function () {
        console.log('选择框关闭')
        this.selectSalePlan = {};
        this.selectedM = {};
      },
      formatStatus: function (row, column) {
        return row.materialType == 1 ? '已确认' : '未确认';
      },
      //materials: [["手套", 1, 38]]
      selectType(e, v, icon) {
        let that = this;
        console.log('changne'); //products  materials
        this.types = e;
        if (e == 2) {
          this.midProduct = [];
          this.midProduct = this.materials.concat(this.midProduct);
          this.emptyDetail()
        } else {
          this.midProduct = [];
          this.midProduct = this.products.concat(this.midProduct);
          this.emptyDetail()
        }
      },
      matterSelect(e) {
        console.log(e);
        let that = this;
        this.midProduct.forEach(function (v, i, arr) {
          if (v.id == e) {
            that.detail.unitId = v.unitId;
            that.detail.unitName = v.unitName;
            that.detail.name = v.name;
            that.detail.materialId = v.id; //选取的物料Id
            that.detail.specifications = v.specs;

          }
        })
      },

      //清理编号和查询结果
      clearSerialNumbers() {
        let that = this;
        that.serialNumbers = [];
        that.selectPlans = []
        that.serialNumbers.push({
          sid: 1,
          id: 0,
          startNo: '',
          endNo: '',
          type: 'new',
          note: ''
        });
      },

      editeDetail(index, row) {
        console.log('詳情：' + row);
        this.detail = row;
        this.selectPlans.push(row.salesPlan);
        this.dialogFormVisible = true;

      },
      deleteDetail(index, row) {
        this.$confirm('此操作将删除该纪录, 是否继续?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          this.detailDelete(row.id);
        }).catch(() => {
        });
      },
      detailDelete(ids) {
        this.tableLoading = true;
        var _this = this;
        this.getRequest("/productionplandetails/deletmark?id=" + ids).then(resp => {
          _this.tableLoading = false;
          if (resp && resp.status == 200) {
            var data = resp.data;
            _this.loadData();
          }
        })


      },
      emptyDetail() {
        this.detail = {
          id: 0,
          actualQuantity: '',
          salesPlanId: '',
          notes: '',
          salesPlan: {}, //销售计划
          serialNumbers: [],
          type: 'new',
          status: 3,
          productNo: '',
          specifications: '',
          productionPlanId: 0,
        };
      },
      initData() {
        var _this = this;
        _this.loadData();
        this.getRequest("/productionplan/basedata").then(resp => {
          if (resp && resp.status == 200) {
            var data = resp.data;
            // _this.units = data.root.units;
            // _this.clients = data.root.clients;
            var ma = data.root.clients;
            var mater = [];
            ma.forEach(function (v, i, arr) {
              var name = v[0],
                id = v[1],
                parentClientId = v[2];
              mater.push({
                name: name,
                id: id,
                parentClientId: parentClientId,
                parentName: v[3],
                address: v[4],
                phone: v[5],
                abbreviation: v[6],

              })
            });
            _this.clients = mater;
            _this.midProduct = [];
            _this.midProduct = _this.materials.concat(_this.midProduct);
            var pro = [];
            var p = data.root.products;
            p.forEach(function (v, i, arr) {
              pro.push({
                id: v[0],
                producteName: v[1],
                specification: v[2],
                proType: v[3],
                mark: v[4],
                color: v[5],
              })
            });
            _this.products = pro;
          }
        })

      },
      keywordsChange(val) {
        if (val == '') {
          this.loadData();
        }
      },
      keywordsMaterialChange(val) {
        if (val == '') {
          this.loadMaterial();
        }
      },
      handleNodeClick(data) {
        let that = this;
        that.tableLoading = true;
        this.crrentSelectShop = data;
        this.detail.clientId = data.id;
        this.detail.clientName = data.name;
        this.detail.abbrName = data.abbreviation;
        this.showOrHidePop = false;
        this.depTextColor = '#606266';
        this.getCurrentPlans()
      },
      showCurrentNo() {

        if (this.isprarent) {
          this.isprarent = false;
        } else {
          this.isprarent = true;
        }
      },

      showDetails(row) {
        this.currntPlanRow = row;
        this.planDetails = row.details;
        this.plan.id = row.id;
      },
      // 切换编号;
      changeNO() {
        let that = this;
        if (that.isCurrentShop) {
          that.lastPlanDetail = that.currentShop;
          that.isCurrentShop = false;
        } else {
          that.lastPlanDetail = that.currentParentShop;
          that.isCurrentShop = true;
        }
      },
      getCurrentPlans() { //???
        let that = this;

        this.getRequest("/productionplan/getPlanDetails?clientId=" + that.selectSalePlan.client.id + "&productId=" +
          that.selectSalePlan.product.id).then(resp => {
          that.tableLoading = false;
          if (resp && resp.status == 200) {
            var data = resp.data;
            that.currentParentShop = data.root.parent || [];
            if (that.currentParentShop.length) {
              var n = that.currentParentShop.length - 1;
              that.currentParentShop = that.currentParentShop[n]
              var lastMaxNumber = that.currentParentShop[n].endNo;
              that.sugestParentstartNo = that.sugestStartNo(lastMaxNumber, 1);
            } else { //设置为起始的000001;
              that.sugestParentstartNo = '00000001';
              that.currentParentShop = {};
              that.setStartSerialNo(that.sugestParentstartNo, that.sugestParentEndNo.endNo, "parent");
            }
            // if (that.currentParentShop.length) {
            //   that.sugestParentEndNo = that.sugestStartNo(that.currentParentShop[n].endNo, parseInt(that.detail
            //     .salesPlanId) + 1)
            //   }
            //   that.setStartSerialNo(that.sugestParentstartNo, that.sugestParentEndNo.endNo, "parent");
            // that.lastPlanDetail = that.currentParentShop;
            that.currentShop = data.root.self || [];

            if (that.currentShop.length) {

              var m = that.currentShop.length - 1;
              that.currentShop = that.currentShop[m];
              var lastMisNumber = that.currentShop[m].endNo;
              that.sugestSelfNumbers = that.sugestStartNo(lastMisNumber, 1);
            } else { //设置为起始的000001;
              that.sugestSelfNumbers = "00000001"
              that.currentShop = {};
            }
          }
        })
      },
      setEndNumber: function (e) {
        console.log(e) + "********************8";
        // e.target.value
        let that = this;
        if (that.isCurrentShop) {
          that.lastPlanDetail = that.currentShop;
          if (that.currentShop.length) {

            var m = that.currentShop.length - 1;
            that.sugestSelfEndNumbers = that.sugestStartNo(that.currentShop[m].endNo, parseInt(e) + 1);
            if (that.sugestSelfEndNumbers) {

              this.serialNumbers[0].startNo = that.sugestSelfNumbers;
              this.serialNumbers[0].endNo = that.sugestSelfEndNumbers;
              this.serialNumbers[0].note = '';
              this.serialNumbers[0].clientId = this.crrentSelectShop.id;
              this.serialNumbers[0].productId = this.detail.proId;
            }
          } else {
            var baseData = that.sugestSelfNumbers
            that.setCurrentEndData(baseData, e);
          }
        } else {
          that.lastPlanDetail = that.currentParentShop;
          if (that.currentParentShop.length) {
            var n = that.currentParentShop.length - 1;
            that.sugestParentEndNo = that.sugestStartNo(that.currentParentShop[n].endNo, parseInt(e) + 1);
            if (that.sugestParentEndNo) {
              this.serialNumbers[0].startNo = that.sugestParentstartNo;
              this.serialNumbers[0].endNo = that.sugestParentEndNo;
              this.serialNumbers[0].note = '';
              this.serialNumbers[0].clientId = this.crrentSelectShop.id;
              this.serialNumbers[0].productId = this.detail.proId;
            }
          } else {
            var baseData = that.currentParentShop;
            that.setCurrentEndData(baseData, e);
          }
        }
      },
      setbyStartNo(e) {
        console.log(e) + "********************startNO";
        if (e.length > this.codeLen) {
          Message("编码错误!");

        }
        if (this.detail.actualQuantity) {
          this.setCurrentEndData(e, this.detail.actualQuantity)
        }
      },
      setCurrentEndData(baseData, e) {
        var baseLen = baseData.toString().length;
        var currentData = parseInt(baseData) + parseInt(e);
        var currentDataLen = currentData.toString().length;
        var zerolen = this.codeLen - currentDataLen;
        if (zerolen) {
          for (let i = 0; i < zerolen; i++) {
            currentData = "0" + currentData;
          }
        }

        this.serialNumbers[0].endNo = currentData;
      },

      //生成起始编号:
      sugestStartNo(str, nu) {
        let that = this;
        // var str = "ox002VtII0000UUY";
        var getNum = function (Str, isFilter) {
          isFilter = isFilter || false;
          if (typeof Str === "string") {
            // var arr = Str.match(/(0\d{2,})|([1-9]\d+)/g);
            //"/[1-9]\d{1,}/g",表示匹配1到9,一位数以上的数字(不包括一位数).
            //"/\d{2,}/g",  表示匹配至少二个数字至多无穷位数字
            var arr = Str.match(isFilter ? /[0-9]\d{1,}/g : /\d{1,}/g);
            console.log(arr);
            return arr.map(function (item) {
              //转换为整数，
              //但是提取出来的数字，如果是连续的多个0会被改为一个0，如000---->0，
              //或者0开头的连续非零数字，比如015，会被改为15，这是一个坑
              // return parseInt(item);
              //字符串，连续的多个0也会存在，不会被去掉
              return item;
            });
          } else {
            return [];
          }
        };
        var startIndex = str.indexOf(getNum(str)[0]);
        var startStr = str.substr(0, startIndex);
        var endStr = str.substr(startIndex + getNum(str)[0].length, str.length - 1);
        //中间数字的长度;
        var currentNumber = parseInt(getNum(str)[0]) + nu;
        var cNo = currentNumber.toString().length;
        var subNo = (currentNumber - cNo);
        if (subNo) {
          // 位数不够的补零
          for (var i = 0; i < subNo; i++) {
            currentNumber += "0";
          }
        }
        return startStr + currentNumber + endStr;

      },
      // 设置起始编号:type ;self  parent
      setStartSerialNo(sugestNo, endNo, type) {
        if (this.serialNumbers.length) {
          this.serialNumbers[0].startNo = sugestNo;
          if (endNo) {
            this.serialNumbers[0].endNo = endNo;
          } else {
            this.serialNumbers[0].endNo = '';
          }
          this.serialNumbers[0].note = '';
        }

      },

      clearChoose() {
        this.detail.clientId = 0;
        this.detail.clientName = "";
      },
      showDepTree() {
        this.showHidePop = !this.showHidePop;
      },
      selectChange(e) {
        let that = this;
        console.log(e);
        if (that.units) {
          that.units.forEach(function (v, arr) {
            if (v.id == e) {
              console.log(v.id);
              that.detail.unitName = v.name;

            }
          })
        }

      },
      currentChange(currentChange) {
        this.currentPage = currentChange;
        console.log(this.currentPage);
        this.loadData();
      },
      currentMaterialChange(currentChange) {
        this.currentMaterialPage = currentChange;
        this.loadMaterial();
      },
      addAndFlushData() {
        this.dialogTitle = "郑铁公司生产计划单";
        this.dialogFormVisible = true;
        this.plan.id = 0;
      },
      addNewDetail(row) {
        this.dialogTitle = "郑铁公司生产计划单";
        let that = this;
        that.serialNumbers = [];
        that.detail.productionPlanId = row.id;
        this.plan.id = 0;
        that.serialNumbers.push(this.serialNumber);
        that.dialogFormVisible = true;
      },
      searchData() {
        this.loadData();
      },
      searchMaterialData() {
        this.loadMaterial();
      },
      showEditEmpView(index, row) {
        console.log(row)
        var that = this;
        that.dialogTitle = "编辑信息";
        this.showDetail = false;
        that.plan = row;
        that.plan.createDate = row.createDate;
        var currentPlan = _.cloneDeep(row);
        if (currentPlan.details != undefined) {
          currentPlan.details.forEach(function (v, i, arr) {
            v.type = 'odd';
            v.sid = i + 1;
          })
          this.productionPlanDetails = currentPlan.details;
          this.maxSid = currentPlan.details.length;
        }
        that.dialogFormVisible = true;
      },
      add(addEmpForm) {
        var _this = this;
        console.log("addbox！！！！");
        if (this.detail.actualQuantity == '' || this.detail.actualQuantity == undefined) {
          Message('请输入数量！');
          return false;
        }
        if (this.detail.salesPlanId == '') {
          Message('请选择销售计划')
          return false;
        }
        this.detail.serialNumbers = this.serialNumbers;
        this.productionPlanDetails.push(this.detail);

        var plans = _.cloneDeep(this.plan);
        var plansData = _.cloneDeep(this.productionPlanDetails);
        var cache = [];
        var currentDetail = plansData;
        currentDetail.forEach(function (v) {
          delete v.salesPlan;
        })
        var str = JSON.stringify(currentDetail, function (key, value) {
          if (typeof value === 'object' && value !== null) {
            if (cache.indexOf(value) !== -1) {
              // Circular reference found, discard key
              return;
            }

            cache.push(value);
          }
          return value;
        });
        cache = null;
        plans.productionPlanDetails = str;
        this.$refs[addEmpForm].validate((valid) => {
          if (valid) {
            if (this.plan.id) {
              //更新
              this.tableLoading = true;
              this.postRequest("/productionplan/update", plans).then(resp => {
                _this.tableLoading = false;
                if (resp && resp.status == 200) {
                  // var data = resp.data;
                  _this.dialogFormVisible = false;
                  _this.loadData();
                  _this.emptyData();
                  _this.emptyDetail();
                  _this.clearSerialNumbers();
                  _this.showDetails(_this.currntPlanRow);
                }
              })
            } else {
              //添加
              this.tableLoading = true;
              console.log(plans);
              this.postRequest("/productionplan/add", plans).then(resp => {
                _this.tableLoading = false;
                if (resp && resp.status == 200) {
                  _this.dialogFormVisible = false;
                  _this.loadData();
                  _this.emptyData();
                  _this.emptyDetail();
                  _this.clearSerialNumbers();
                  _this.showDetails(_this.currntPlanRow);
                }
              })
            }
          } else {
            return false;
          }
        });
      },

      cancelOpt() {
        this.dialogFormVisible = false;
        this.clearChoose();
        this.clearSerialNumbers();
        this.emptyDetail();
        this.loadData();
        console.log('o(*￣︶￣*)o')

      },

      deleteData(row) {
        this.$confirm('此操作将删除该纪录, 是否继续?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          this.doDelete(row.id);
        }).catch(() => {
        });
      },
      doDelete(ids) {
        this.tableLoading = true;
        var _this = this;
        this.getRequest("/productionplan/deletmark?id=" + ids).then(resp => {
          _this.tableLoading = false;
          if (resp && resp.status == 200) {
            var data = resp.data;
            _this.loadData();
          }
        })
      },
      loadData() {
        var _this = this;
        this.tableLoading = true;
        this.getRequest("/productmanage/findbypage?page=" + this.currentPage + "&size=10&queryName=" + this
          .keywords)
          .then(
            resp => {
              this.tableLoading = false;
              if (resp && resp.status == 200) {
                var data = resp.data.data;
                _this.plans = data;

                _this.totalCount = resp.data.total;
                _this.emptyData();
              }
            })
      },
      loadMaterial() {
        var _this = this;
        this.tableLoading = true;
        this.getRequest("/productionplandetails/findbystatus?page=" + this.currentMaterialPage + "&size=10&queryName=" +
          this.keyMaterialwords).then(resp => {
          this.tableLoading = false;
          if (resp && resp.status == 200) {
            var data = resp.data.data;
            _this.materialList = data;
            _this.totalMaterialCount = resp.data.total;
            _this.dialogMaterialVisible = true;
            // _this.emptyData();
            // 清除选择的行
          }
        })
      },

      emptyData() {
        this.productionPlanDetails = [];
        this.plan = {
          id: 0,
          notes: '', //整单备注
          productionPlanNo: '', //整单编号
          productionPlanDetails: '',
        }
        if (this.currntPlanRow) {
          this.plan.id = this.currntPlanRow.id;
        }
      }
    },
    computed: {
      routes() {
        return this.$store.state.routes
      }
    }
  }

</script>
<style>
  .demo-table-expand {
    font-size: 0;
  }

  .demo-table-expand label {
    width: 50px;
    color: #2974df;
  }

  .demo-table-expand {
    margin-left: 10px;
    margin-bottom: 0;
    width: auto;
  }

  .step-detail .detail {
    margin-top: 10px;
  }


  /* :row-class-name="tableRowClassName"在渲染表格的时候就调用了，不能用来响应点击事件改变行的颜色。
  可以给表格添加:highlight-current-row属性，高亮显示当前行。然后通过修改css来改变颜色，像这样 */
  .el-table__body tr.current-row > td {
    background: #e6cf4d !important;
  }

  .step-detail {
    margin-left: 30px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 80%;
  }

</style>
